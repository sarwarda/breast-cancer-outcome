<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.22.0213.1102                               -->
<workbook original-version='18.1' source-build='2021.4.4 (20214.22.0213.1102)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://public.tableau.com/workbooks/HowtobuildDrillDownHeirarchyOrganisationChart?rev=1.0' id='HowtobuildDrillDownHeirarchyOrganisationChart' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Path Param' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;-&quot;'>
        <calculation class='tableau' formula='&quot;-&quot;' />
      </column>
    </datasource>
    <datasource caption='data' inline='true' name='federated.0663e4o1pol7sn1684anz0638u52' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DecisionTree_tableau data' name='excel-direct.1xw31m51jg9t4a18cnid50oav1ff'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/sarahwarda/Library/Mobile Documents/com~apple~CloudDocs/Johns Hopkins Graduate School/Spring 2022/605.662 Data Visualization/Projects/Final Project/Warda_final_project/DecisionTree_tableau data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[data].[DEPENDENCY_NAME]' />
              <expression op='[Classifer].[DEPENDENCY_NAME]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='1' />
                <expression op='1' />
              </expression>
            </clause>
            <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='data' table='[data$]' type='table'>
              <columns gridOrigin='A1:J82:no:A1:J82:0' header='yes' outcome='2'>
                <column datatype='string' name='FINAL_OBJECT' ordinal='0' />
                <column datatype='string' name='OBJECT_NAME' ordinal='1' />
                <column datatype='string' name='DEPENDENCY_NAME' ordinal='2' />
                <column datatype='integer' name='DEPENDENCY_TYPE' ordinal='3' />
                <column datatype='integer' name='START_NODE_LEVEL' ordinal='4' />
                <column datatype='integer' name='END_NODE_LEVEL' ordinal='5' />
                <column datatype='boolean' name='DRILL_DOWN_FLAG' ordinal='6' />
                <column datatype='integer' name='START_NODE_ID' ordinal='7' />
                <column datatype='integer' name='END_NODE_ID' ordinal='8' />
                <column datatype='string' name='PATH' ordinal='9' />
              </columns>
            </relation>
            <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='range' table='[range$]' type='table'>
              <columns gridOrigin='A1:A50:no:A1:A50:0' header='yes' outcome='6'>
                <column datatype='real' name='RANGE' ordinal='0' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='Classifer' table='[Classifer$]' type='table'>
            <columns gridOrigin='A1:F82:no:A1:F82:0' header='yes' outcome='2'>
              <column datatype='string' name='DEPENDENCY_NAME' ordinal='0' />
              <column datatype='string' name='Condition' ordinal='1' />
              <column datatype='real' name='Entropy' ordinal='2' />
              <column datatype='integer' name='Samples' ordinal='3' />
              <column datatype='string' name='Value' ordinal='4' />
              <column datatype='integer' name='Class' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[data].[DEPENDENCY_NAME]' />
              <expression op='[Classifer].[DEPENDENCY_NAME]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='1' />
                <expression op='1' />
              </expression>
            </clause>
            <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='data' table='[data$]' type='table'>
              <columns gridOrigin='A1:J82:no:A1:J82:0' header='yes' outcome='2'>
                <column datatype='string' name='FINAL_OBJECT' ordinal='0' />
                <column datatype='string' name='OBJECT_NAME' ordinal='1' />
                <column datatype='string' name='DEPENDENCY_NAME' ordinal='2' />
                <column datatype='integer' name='DEPENDENCY_TYPE' ordinal='3' />
                <column datatype='integer' name='START_NODE_LEVEL' ordinal='4' />
                <column datatype='integer' name='END_NODE_LEVEL' ordinal='5' />
                <column datatype='boolean' name='DRILL_DOWN_FLAG' ordinal='6' />
                <column datatype='integer' name='START_NODE_ID' ordinal='7' />
                <column datatype='integer' name='END_NODE_ID' ordinal='8' />
                <column datatype='string' name='PATH' ordinal='9' />
              </columns>
            </relation>
            <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='range' table='[range$]' type='table'>
              <columns gridOrigin='A1:A50:no:A1:A50:0' header='yes' outcome='6'>
                <column datatype='real' name='RANGE' ordinal='0' />
              </columns>
            </relation>
          </relation>
          <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='Classifer' table='[Classifer$]' type='table'>
            <columns gridOrigin='A1:F82:no:A1:F82:0' header='yes' outcome='2'>
              <column datatype='string' name='DEPENDENCY_NAME' ordinal='0' />
              <column datatype='string' name='Condition' ordinal='1' />
              <column datatype='real' name='Entropy' ordinal='2' />
              <column datatype='integer' name='Samples' ordinal='3' />
              <column datatype='string' name='Value' ordinal='4' />
              <column datatype='integer' name='Class' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Class]' value='[Classifer].[Class]' />
          <map key='[Condition]' value='[Classifer].[Condition]' />
          <map key='[DEPENDENCY_NAME (Classifer)]' value='[Classifer].[DEPENDENCY_NAME]' />
          <map key='[DEPENDENCY_NAME]' value='[data].[DEPENDENCY_NAME]' />
          <map key='[DEPENDENCY_TYPE]' value='[data].[DEPENDENCY_TYPE]' />
          <map key='[DRILL_DOWN_FLAG]' value='[data].[DRILL_DOWN_FLAG]' />
          <map key='[END_NODE_ID]' value='[data].[END_NODE_ID]' />
          <map key='[END_NODE_LEVEL]' value='[data].[END_NODE_LEVEL]' />
          <map key='[Entropy]' value='[Classifer].[Entropy]' />
          <map key='[FINAL_OBJECT]' value='[data].[FINAL_OBJECT]' />
          <map key='[OBJECT_NAME]' value='[data].[OBJECT_NAME]' />
          <map key='[PATH]' value='[data].[PATH]' />
          <map key='[RANGE]' value='[range].[RANGE]' />
          <map key='[START_NODE_ID]' value='[data].[START_NODE_ID]' />
          <map key='[START_NODE_LEVEL]' value='[data].[START_NODE_LEVEL]' />
          <map key='[Samples]' value='[Classifer].[Samples]' />
          <map key='[Value]' value='[Classifer].[Value]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J82:no:A1:J82:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[range]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:A50:no:A1:A50:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Classifer]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F82:no:A1:F82:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FINAL_OBJECT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FINAL_OBJECT]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>FINAL_OBJECT</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBJECT_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OBJECT_NAME]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>OBJECT_NAME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPENDENCY_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DEPENDENCY_NAME]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>DEPENDENCY_NAME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPENDENCY_TYPE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DEPENDENCY_TYPE]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>DEPENDENCY_TYPE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>START_NODE_LEVEL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[START_NODE_LEVEL]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>START_NODE_LEVEL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>END_NODE_LEVEL</remote-name>
            <remote-type>20</remote-type>
            <local-name>[END_NODE_LEVEL]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>END_NODE_LEVEL</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRILL_DOWN_FLAG</remote-name>
            <remote-type>11</remote-type>
            <local-name>[DRILL_DOWN_FLAG]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>DRILL_DOWN_FLAG</remote-alias>
            <ordinal>6</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WINBOOL&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>START_NODE_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[START_NODE_ID]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>START_NODE_ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>END_NODE_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[END_NODE_ID]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>END_NODE_ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PATH</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PATH]</local-name>
            <parent-name>[data]</parent-name>
            <remote-alias>PATH</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RANGE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[RANGE]</local-name>
            <parent-name>[range]</parent-name>
            <remote-alias>RANGE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPENDENCY_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DEPENDENCY_NAME (Classifer)]</local-name>
            <parent-name>[Classifer]</parent-name>
            <remote-alias>DEPENDENCY_NAME</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition]</local-name>
            <parent-name>[Classifer]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Entropy]</local-name>
            <parent-name>[Classifer]</parent-name>
            <remote-alias>Entropy</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Samples</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Samples]</local-name>
            <parent-name>[Classifer]</parent-name>
            <remote-alias>Samples</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Classifer]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Class]</local-name>
            <parent-name>[Classifer]</parent-name>
            <remote-alias>Class</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='@Sigmoid Curve' datatype='real' name='[Calculation_1713056762852913156]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1/(1+EXP(2)^-[RANGE])' />
      </column>
      <column caption='@X Axis' datatype='real' name='[Calculation_1713056762852999173]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[RANGE] + (([START_NODE_LEVEL]-1)*12)' />
      </column>
      <column caption='@Curve' datatype='real' name='[Calculation_1713056762853146630]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[START_NODE_ID] + (([END_NODE_ID]-[START_NODE_ID])*[Calculation_1713056762852913156])' />
      </column>
      <column caption='@Point' datatype='real' name='[Calculation_1713056762853273607]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if first()=0 or last()=0 then sum([Calculation_1713056762852999173]) end'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='@colour Calc' datatype='string' name='[Calculation_1713056762854825993]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  ISNULL([Calculation_1713056762855010314]) = true then  &quot;Null&quot;&#13;&#10;ELSEIF [Class] = 1 then &apos;Survived&apos;&#10;ELSEIF [Class] = 0 then &apos;Died&apos;&#10;ELSE &apos;None&apos;&#13;&#10;end' />
      </column>
      <column caption='@Label' datatype='string' name='[Calculation_1713056762855010314]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([Calculation_1713056762852999173])= -6 and [END_NODE_ID] = 0 then  [FINAL_OBJECT]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 1 and ([Calculation_1713056762852999173])= 6 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 2 and ([Calculation_1713056762852999173])= 6 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 2 and ([Calculation_1713056762852999173])= 18 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 3 and ([Calculation_1713056762852999173])= 18 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 3 and ([Calculation_1713056762852999173])= 30 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 4 and ([Calculation_1713056762852999173])= 30 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 4 and ([Calculation_1713056762852999173])= 42 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 5 and ([Calculation_1713056762852999173])= 42 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 5 and ([Calculation_1713056762852999173])= 54 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 6 and ([Calculation_1713056762852999173])= 54 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 6 and ([Calculation_1713056762852999173])= 66 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 7 and ([Calculation_1713056762852999173])= 66 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 7 and ([Calculation_1713056762852999173])= 78 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 8 and ([Calculation_1713056762852999173])= 78 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 8 and ([Calculation_1713056762852999173])= 90 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 9 and ([Calculation_1713056762852999173])= 90 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 9 and ([Calculation_1713056762852999173])= 102 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 10 and ([Calculation_1713056762852999173])= 102 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 10 and ([Calculation_1713056762852999173])= 114 then [DEPENDENCY_NAME]&#13;&#10;end' />
      </column>
      <column caption='@path Calc' datatype='string' name='[Calculation_1713056762856116236]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_1713056762853273607] = -6 then &apos;-&apos; else Attr([PATH]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Show Path' datatype='boolean' name='[Calculation_1713056762856574989]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='// This calculation is used to compare the start node id with the path paramater value in the heirarchy when the user select the drill down pill on the dashboard.&#13;&#10;&#13;&#10;IF [START_NODE_LEVEL]=1 THEN TRUE //always show the top hierarchy&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=2 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,2)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=3 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,3)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=4 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,4)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=5 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,5)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=6 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,6)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=7 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,7)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=8 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,8)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=9 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,9)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=10 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,10)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=11 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,11)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=12 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,12)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=13 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,13)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=14 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,14)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=15 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,15)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;&#13;&#10;end' />
      </column>
      <column datatype='integer' name='[Class]' role='measure' type='quantitative'>
        <aliases>
          <alias key='0' value='Died' />
          <alias key='1' value='Survived' />
        </aliases>
      </column>
      <column caption='DEPENDENCY NAME (Classifer)' datatype='string' name='[DEPENDENCY_NAME (Classifer)]' role='dimension' type='nominal' />
      <column caption='Dependency Name' datatype='string' name='[DEPENDENCY_NAME]' role='dimension' type='nominal' />
      <column caption='Dependency Type' datatype='integer' name='[DEPENDENCY_TYPE]' role='measure' type='quantitative' />
      <column caption='Drill Down Flag' datatype='boolean' name='[DRILL_DOWN_FLAG]' role='dimension' type='nominal' />
      <column caption='End Node Id' datatype='integer' name='[END_NODE_ID]' role='dimension' type='ordinal' />
      <column caption='End Node Level' datatype='integer' name='[END_NODE_LEVEL]' role='measure' type='quantitative' />
      <column caption='Final Object' datatype='string' name='[FINAL_OBJECT]' role='dimension' type='nominal' />
      <column caption='Object Name' datatype='string' name='[OBJECT_NAME]' role='dimension' type='nominal' />
      <column caption='Path' datatype='string' name='[PATH]' role='dimension' type='nominal' />
      <column caption='Range' datatype='real' name='[RANGE]' role='measure' type='quantitative' />
      <column caption='Start Node Id' datatype='integer' name='[START_NODE_ID]' role='dimension' type='ordinal' />
      <column caption='Start Node Level' datatype='integer' name='[START_NODE_LEVEL]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data' datatype='table' name='[__tableau_internal_object_id__].[data_2489A64BDED94928A082FEB9A5BEB9CF]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1713056762854825993]' derivation='None' name='[none:Calculation_1713056762854825993:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1713056762855010314]' derivation='None' name='[none:Calculation_1713056762855010314:nk]' pivot='key' type='nominal' />
      <column-instance column='[Class]' derivation='None' name='[none:Class:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DEPENDENCY_NAME]' derivation='None' name='[none:DEPENDENCY_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[FINAL_OBJECT]' derivation='None' name='[none:FINAL_OBJECT:nk]' pivot='key' type='nominal' />
      <column-instance column='[RANGE]' derivation='None' name='[none:RANGE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1713056762852999173]' derivation='Sum' name='[sum:Calculation_1713056762852999173:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1713056762853273607]' derivation='User' name='[usr:Calculation_1713056762853273607:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <group hidden='true' name='[Exclusions (@colour Calc,@drill Down,@Label,Dependency Name,Final Object,Null Highlight,Range)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_1713056762854825993:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_1713056762855411723:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_1713056762855010314:nk]' />
          <groupfilter function='level-members' level='[none:DEPENDENCY_NAME:nk]' />
          <groupfilter function='level-members' level='[none:FINAL_OBJECT:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_1713056762857160718:nk]' />
          <groupfilter function='level-members' level='[none:RANGE:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Dependency Name,Final Object,Range)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:DEPENDENCY_NAME:nk]' />
          <groupfilter function='level-members' level='[none:FINAL_OBJECT:nk]' />
          <groupfilter function='level-members' level='[none:RANGE:qk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_GB' class='hyper' dbname='/Users/sarahwarda/Library/Mobile Documents/com~apple~CloudDocs/Johns Hopkins Graduate School/Spring 2022/605.662 Data Visualization/Projects/Final Project/Warda_final_project/SEER Breast Cancer Decision Tree.twb Files/Data/How to build Drill Down Heirarchy_ Organisation Chart.twb Files/federated.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/05/2022 06:45:51 AM' username=''>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Class]' value='[Extract].[Class]' />
            <map key='[Condition]' value='[Extract].[Condition]' />
            <map key='[DEPENDENCY_NAME (Classifer)]' value='[Extract].[DEPENDENCY_NAME]' />
            <map key='[DEPENDENCY_NAME]' value='[Extract].[DEPENDENCY_NAME1]' />
            <map key='[DEPENDENCY_TYPE]' value='[Extract].[DEPENDENCY_TYPE]' />
            <map key='[DRILL_DOWN_FLAG]' value='[Extract].[DRILL_DOWN_FLAG]' />
            <map key='[END_NODE_ID]' value='[Extract].[END_NODE_ID]' />
            <map key='[END_NODE_LEVEL]' value='[Extract].[END_NODE_LEVEL]' />
            <map key='[Entropy]' value='[Extract].[Entropy]' />
            <map key='[FINAL_OBJECT]' value='[Extract].[FINAL_OBJECT]' />
            <map key='[OBJECT_NAME]' value='[Extract].[OBJECT_NAME]' />
            <map key='[PATH]' value='[Extract].[PATH]' />
            <map key='[RANGE]' value='[Extract].[RANGE]' />
            <map key='[START_NODE_ID]' value='[Extract].[START_NODE_ID]' />
            <map key='[START_NODE_LEVEL]' value='[Extract].[START_NODE_LEVEL]' />
            <map key='[Samples]' value='[Extract].[Samples]' />
            <map key='[Value]' value='[Extract].[Value]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='data' increment-value='%null%' refresh-type='create' rows-inserted='3969' timestamp-start='2022-05-05 06:45:51.319' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>FINAL_OBJECT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FINAL_OBJECT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FINAL_OBJECT</remote-alias>
              <ordinal>0</ordinal>
              <family>data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBJECT_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OBJECT_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OBJECT_NAME</remote-alias>
              <ordinal>1</ordinal>
              <family>data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEPENDENCY_NAME1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DEPENDENCY_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEPENDENCY_NAME1</remote-alias>
              <ordinal>2</ordinal>
              <family>data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEPENDENCY_TYPE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DEPENDENCY_TYPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEPENDENCY_TYPE</remote-alias>
              <ordinal>3</ordinal>
              <family>data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>START_NODE_LEVEL</remote-name>
              <remote-type>20</remote-type>
              <local-name>[START_NODE_LEVEL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>START_NODE_LEVEL</remote-alias>
              <ordinal>4</ordinal>
              <family>data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>END_NODE_LEVEL</remote-name>
              <remote-type>20</remote-type>
              <local-name>[END_NODE_LEVEL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>END_NODE_LEVEL</remote-alias>
              <ordinal>5</ordinal>
              <family>data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DRILL_DOWN_FLAG</remote-name>
              <remote-type>11</remote-type>
              <local-name>[DRILL_DOWN_FLAG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DRILL_DOWN_FLAG</remote-alias>
              <ordinal>6</ordinal>
              <family>data</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>START_NODE_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[START_NODE_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>START_NODE_ID</remote-alias>
              <ordinal>7</ordinal>
              <family>data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>END_NODE_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[END_NODE_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>END_NODE_ID</remote-alias>
              <ordinal>8</ordinal>
              <family>data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PATH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PATH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PATH</remote-alias>
              <ordinal>9</ordinal>
              <family>data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>RANGE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[RANGE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>RANGE</remote-alias>
              <ordinal>10</ordinal>
              <family>range</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DEPENDENCY_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DEPENDENCY_NAME (Classifer)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DEPENDENCY_NAME</remote-alias>
              <ordinal>11</ordinal>
              <family>Classifer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Condition</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Condition</remote-alias>
              <ordinal>12</ordinal>
              <family>Classifer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Entropy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Entropy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entropy</remote-alias>
              <ordinal>13</ordinal>
              <family>Classifer</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Samples</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Samples]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Samples</remote-alias>
              <ordinal>14</ordinal>
              <family>Classifer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Value</remote-alias>
              <ordinal>15</ordinal>
              <family>Classifer</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Class</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Class]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Class</remote-alias>
              <ordinal>16</ordinal>
              <family>Classifer</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_2489A64BDED94928A082FEB9A5BEB9CF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762853273607:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0663e4o1pol7sn1684anz0638u52].[sum:Calculation_1713056762852999173:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1713056762854825993:nk]' type='palette'>
            <map to='#3896c4'>
              <bucket>&quot;Survived&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Null&quot;</bucket>
            </map>
            <map to='#7719e3'>
              <bucket>&quot;purple&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;orange&quot;</bucket>
            </map>
            <map to='#c8133b'>
              <bucket>&quot;Died&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Class:ok]' type='palette'>
            <map to='#2d9ced'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='Path Param' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;-&quot;'>
          <calculation class='tableau' formula='&quot;-&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data' id='data_2489A64BDED94928A082FEB9A5BEB9CF'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[data].[DEPENDENCY_NAME]' />
                    <expression op='[Classifer].[DEPENDENCY_NAME]' />
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='1' />
                      <expression op='1' />
                    </expression>
                  </clause>
                  <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='data' table='[data$]' type='table'>
                    <columns gridOrigin='A1:J82:no:A1:J82:0' header='yes' outcome='2'>
                      <column datatype='string' name='FINAL_OBJECT' ordinal='0' />
                      <column datatype='string' name='OBJECT_NAME' ordinal='1' />
                      <column datatype='string' name='DEPENDENCY_NAME' ordinal='2' />
                      <column datatype='integer' name='DEPENDENCY_TYPE' ordinal='3' />
                      <column datatype='integer' name='START_NODE_LEVEL' ordinal='4' />
                      <column datatype='integer' name='END_NODE_LEVEL' ordinal='5' />
                      <column datatype='boolean' name='DRILL_DOWN_FLAG' ordinal='6' />
                      <column datatype='integer' name='START_NODE_ID' ordinal='7' />
                      <column datatype='integer' name='END_NODE_ID' ordinal='8' />
                      <column datatype='string' name='PATH' ordinal='9' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='range' table='[range$]' type='table'>
                    <columns gridOrigin='A1:A50:no:A1:A50:0' header='yes' outcome='6'>
                      <column datatype='real' name='RANGE' ordinal='0' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='excel-direct.1xw31m51jg9t4a18cnid50oav1ff' name='Classifer' table='[Classifer$]' type='table'>
                  <columns gridOrigin='A1:F82:no:A1:F82:0' header='yes' outcome='2'>
                    <column datatype='string' name='DEPENDENCY_NAME' ordinal='0' />
                    <column datatype='string' name='Condition' ordinal='1' />
                    <column datatype='real' name='Entropy' ordinal='2' />
                    <column datatype='integer' name='Samples' ordinal='3' />
                    <column datatype='string' name='Value' ordinal='4' />
                    <column datatype='integer' name='Class' ordinal='5' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-parameter-action caption='Parameter1' name='[Action1]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='Decision Tree Classifier' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='i:1' />
      <params>
        <param name='source-field' value='[federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762856116236:nk:1]' />
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Decision Tree Classifier'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/HowtobuildDrillDownHeirarchyOrganisationChart/OrganisationChart?rev=' id='39561612' path='/workbooks/HowtobuildDrillDownHeirarchyOrganisationChart' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0663e4o1pol7sn1684anz0638u52' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Path Param' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;-&quot;'>
              <calculation class='tableau' formula='&quot;-&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0663e4o1pol7sn1684anz0638u52'>
            <column caption='@Sigmoid Curve' datatype='real' name='[Calculation_1713056762852913156]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1/(1+EXP(2)^-[RANGE])' />
            </column>
            <column caption='@X Axis' datatype='real' name='[Calculation_1713056762852999173]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[RANGE] + (([START_NODE_LEVEL]-1)*12)' />
            </column>
            <column caption='@Curve' datatype='real' name='[Calculation_1713056762853146630]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[START_NODE_ID] + (([END_NODE_ID]-[START_NODE_ID])*[Calculation_1713056762852913156])' />
            </column>
            <column caption='@Point' datatype='real' name='[Calculation_1713056762853273607]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if first()=0 or last()=0 then sum([Calculation_1713056762852999173]) end'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='@colour Calc' datatype='string' name='[Calculation_1713056762854825993]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([Calculation_1713056762855010314]) = true then  &quot;Null&quot;&#13;&#10;ELSEIF [Class] = 1 then &apos;Survived&apos;&#10;ELSEIF [Class] = 0 then &apos;Died&apos;&#10;ELSE &apos;None&apos;&#13;&#10;end' />
            </column>
            <column caption='@Label' datatype='string' name='[Calculation_1713056762855010314]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([Calculation_1713056762852999173])= -6 and [END_NODE_ID] = 0 then  [FINAL_OBJECT]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 1 and ([Calculation_1713056762852999173])= 6 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 2 and ([Calculation_1713056762852999173])= 6 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 2 and ([Calculation_1713056762852999173])= 18 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 3 and ([Calculation_1713056762852999173])= 18 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 3 and ([Calculation_1713056762852999173])= 30 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 4 and ([Calculation_1713056762852999173])= 30 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 4 and ([Calculation_1713056762852999173])= 42 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 5 and ([Calculation_1713056762852999173])= 42 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 5 and ([Calculation_1713056762852999173])= 54 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 6 and ([Calculation_1713056762852999173])= 54 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 6 and ([Calculation_1713056762852999173])= 66 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 7 and ([Calculation_1713056762852999173])= 66 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 7 and ([Calculation_1713056762852999173])= 78 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 8 and ([Calculation_1713056762852999173])= 78 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 8 and ([Calculation_1713056762852999173])= 90 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 9 and ([Calculation_1713056762852999173])= 90 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 9 and ([Calculation_1713056762852999173])= 102 then [DEPENDENCY_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 10 and ([Calculation_1713056762852999173])= 102 then [OBJECT_NAME]&#13;&#10;ELSEIF [START_NODE_LEVEL] = 10 and ([Calculation_1713056762852999173])= 114 then [DEPENDENCY_NAME]&#13;&#10;end' />
            </column>
            <column caption='@path Calc' datatype='string' name='[Calculation_1713056762856116236]' role='measure' type='nominal'>
              <calculation class='tableau' formula='if [Calculation_1713056762853273607] = -6 then &apos;-&apos; else Attr([PATH]) END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Show Path' datatype='boolean' name='[Calculation_1713056762856574989]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='// This calculation is used to compare the start node id with the path paramater value in the heirarchy when the user select the drill down pill on the dashboard.&#13;&#10;&#13;&#10;IF [START_NODE_LEVEL]=1 THEN TRUE //always show the top hierarchy&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=2 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,2)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=3 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,3)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=4 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,4)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=5 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,5)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=6 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,6)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=7 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,7)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=8 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,8)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=9 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,9)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=10 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,10)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=11 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,11)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=12 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,12)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=13 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,13)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=14 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,14)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;ELSEIF [START_NODE_LEVEL]=15 &#13;&#10;   AND str([START_NODE_ID])= split([Parameters].[Parameter 1],&apos;|&apos;,15)&#13;&#10;THEN TRUE&#13;&#10;&#13;&#10;&#13;&#10;end' />
            </column>
            <column datatype='integer' name='[Class]' role='measure' type='quantitative'>
              <aliases>
                <alias key='0' value='Died' />
                <alias key='1' value='Survived' />
              </aliases>
            </column>
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column caption='Dependency Name' datatype='string' name='[DEPENDENCY_NAME]' role='dimension' type='nominal' />
            <column caption='End Node Id' datatype='integer' name='[END_NODE_ID]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Entropy]' role='measure' type='quantitative' />
            <column caption='Final Object' datatype='string' name='[FINAL_OBJECT]' role='dimension' type='nominal' />
            <column caption='Object Name' datatype='string' name='[OBJECT_NAME]' role='dimension' type='nominal' />
            <column caption='Path' datatype='string' name='[PATH]' role='dimension' type='nominal' />
            <column caption='Range' datatype='real' name='[RANGE]' role='measure' type='quantitative' />
            <column caption='Start Node Id' datatype='integer' name='[START_NODE_ID]' role='dimension' type='ordinal' />
            <column caption='Start Node Level' datatype='integer' name='[START_NODE_LEVEL]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Samples]' role='measure' type='quantitative' />
            <column datatype='string' name='[Value]' role='dimension' type='nominal' />
            <column-instance column='[Class]' derivation='Attribute' name='[attr:Class:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Condition]' derivation='Attribute' name='[attr:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entropy]' derivation='Attribute' name='[attr:Entropy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Samples]' derivation='Attribute' name='[attr:Samples:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Value]' derivation='Attribute' name='[attr:Value:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1713056762854825993]' derivation='None' name='[none:Calculation_1713056762854825993:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1713056762855010314]' derivation='None' name='[none:Calculation_1713056762855010314:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1713056762856574989]' derivation='None' name='[none:Calculation_1713056762856574989:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEPENDENCY_NAME]' derivation='None' name='[none:DEPENDENCY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[FINAL_OBJECT]' derivation='None' name='[none:FINAL_OBJECT:nk]' pivot='key' type='nominal' />
            <column-instance column='[RANGE]' derivation='None' name='[none:RANGE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1713056762852999173]' derivation='Sum' name='[sum:Calculation_1713056762852999173:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1713056762853146630]' derivation='Sum' name='[sum:Calculation_1713056762853146630:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1713056762853273607]' derivation='User' name='[usr:Calculation_1713056762853273607:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1713056762856116236]' derivation='User' name='[usr:Calculation_1713056762856116236:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.0663e4o1pol7sn1684anz0638u52].[Calculation_1713056762853273607]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1713056762854825993:nk]' />
              <groupfilter function='member' level='[none:Calculation_1713056762854825993:nk]' member='&quot;Null&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762856574989:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1713056762856574989:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762856574989:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0663e4o1pol7sn1684anz0638u52].[sum:Calculation_1713056762852999173:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762853273607:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0663e4o1pol7sn1684anz0638u52].[sum:Calculation_1713056762852999173:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762853273607:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0663e4o1pol7sn1684anz0638u52].[sum:Calculation_1713056762853146630:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='dotted' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-style' value='normal' />
            <format attr='border-color' value='#009bd0' />
            <format attr='border-width' value='2' />
            <format attr='border-style' value='dashed' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='center' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]' value='Status'>
              <formatted-text>
                <run fontcolor='#555555' fontname='Tableau Book'>Status</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762856574989:nk]' value='Zoom and Toggle Path' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:FINAL_OBJECT:nk]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:DEPENDENCY_NAME:nk]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:RANGE:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0663e4o1pol7sn1684anz0638u52].[sum:Calculation_1713056762852999173:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:FINAL_OBJECT:nk]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:DEPENDENCY_NAME:nk]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:RANGE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762853273607:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:FINAL_OBJECT:nk]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:DEPENDENCY_NAME:nk]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:RANGE:qk]' />
              <tooltip column='[federated.0663e4o1pol7sn1684anz0638u52].[attr:Class:qk]' />
              <tooltip column='[federated.0663e4o1pol7sn1684anz0638u52].[attr:Entropy:qk]' />
              <tooltip column='[federated.0663e4o1pol7sn1684anz0638u52].[attr:Samples:qk]' />
              <tooltip column='[federated.0663e4o1pol7sn1684anz0638u52].[attr:Value:nk]' />
              <tooltip column='[federated.0663e4o1pol7sn1684anz0638u52].[attr:Condition:nk]' />
              <text column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762855010314:nk]' />
              <color column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762856116236:nk:1]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Node:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0663e4o1pol7sn1684anz0638u52].[none:DEPENDENCY_NAME:nk]>]]></run>
                <run><![CDATA[
Condition: <[federated.0663e4o1pol7sn1684anz0638u52].[attr:Condition:nk]>
]]></run>
                <run fontcolor='#787878'>Entropy: </run>
                <run bold='true'><![CDATA[<[federated.0663e4o1pol7sn1684anz0638u52].[attr:Entropy:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Samples: </run>
                <run bold='true'><![CDATA[<[federated.0663e4o1pol7sn1684anz0638u52].[attr:Samples:qk]>]]></run>
                <run><![CDATA[
Values: <[federated.0663e4o1pol7sn1684anz0638u52].[attr:Value:nk]>
]]></run>
                <run bold='true' fontcolor='#009bd0'><![CDATA[Class:	<[federated.0663e4o1pol7sn1684anz0638u52].[attr:Class:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0663e4o1pol7sn1684anz0638u52].[none:DEPENDENCY_NAME:nk]</run>
                <run>&gt;&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value='Ratings/4bw.png' />
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0663e4o1pol7sn1684anz0638u52].[sum:Calculation_1713056762852999173:qk] + [federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762853273607:qk])</rows>
        <cols>[federated.0663e4o1pol7sn1684anz0638u52].[sum:Calculation_1713056762853146630:qk]</cols>
      </table>
      <simple-id uuid='{B2CF0DA8-2AA8-40C4-B592-ADA99C95F43E}' />
    </worksheet>
    <worksheet name='Entropy vs. Class'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#666666' fontname='Trebuchet MS'>Entropy Distribution vs. Class</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0663e4o1pol7sn1684anz0638u52' />
          </datasources>
          <datasource-dependencies datasource='federated.0663e4o1pol7sn1684anz0638u52'>
            <column datatype='integer' name='[Class]' role='measure' type='quantitative'>
              <aliases>
                <alias key='0' value='Died' />
                <alias key='1' value='Survived' />
              </aliases>
            </column>
            <column datatype='real' name='[Entropy]' role='measure' type='quantitative' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Entropy]' derivation='None' name='[none:Entropy:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]' value='86' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='stroke-size' value='1' />
            <format attr='stroke-color' value='#8989897c' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]' />
              <lod column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]' />
            </encodings>
            <reference-line axis-column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Entropy:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0663e4o1pol7sn1684anz0638u52].[none:Entropy:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0663e4o1pol7sn1684anz0638u52].[none:Entropy:qk]</rows>
        <cols>[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]</cols>
      </table>
      <simple-id uuid='{1275EDFB-2AD7-40E8-A8BD-EFC2E28051E0}' />
    </worksheet>
    <worksheet name='Total Class Counts'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#555555' fontsize='12'>Total Class Counts</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.0663e4o1pol7sn1684anz0638u52' />
          </datasources>
          <datasource-dependencies datasource='federated.0663e4o1pol7sn1684anz0638u52'>
            <column datatype='integer' name='[Class]' role='measure' type='quantitative'>
              <aliases>
                <alias key='0' value='Died' />
                <alias key='1' value='Survived' />
              </aliases>
            </column>
            <column-instance column='[Class]' derivation='Count' name='[cnt:Class:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Class]' derivation='None' name='[none:Class:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='99' />
            <format attr='height' field='[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]' value='35' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]' value='96' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0663e4o1pol7sn1684anz0638u52].[cnt:Class:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0663e4o1pol7sn1684anz0638u52].[cnt:Class:qk]' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#009bd0' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0663e4o1pol7sn1684anz0638u52].[cnt:Class:qk]' />
              <text column='[federated.0663e4o1pol7sn1684anz0638u52].[cnt:Class:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{FA19EF0A-8BC0-4431-9977-D5008E66C089}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Decision Tree Classifier for SEER Breast Cancer Data'>
      <style />
      <size maxheight='800' maxwidth='1300' minheight='800' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='32' param='horz' type-v2='layout-flow' w='98770' x='615' y='1000'>
            <zone h='98000' id='30' type-v2='layout-basic' w='98770' x='615' y='1000'>
              <zone h='87250' id='7' param='horz' type-v2='layout-flow' w='98770' x='615' y='11750'>
                <zone h='87250' id='5' type-v2='layout-basic' w='98770' x='615' y='11750'>
                  <zone h='87250' id='3' name='Decision Tree Classifier' w='75846' x='615' y='11750'>
                    <zone-style>
                      <format attr='border-color' value='#038fc3' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='2' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='87250' id='18' name='Entropy vs. Class' w='22924' x='76461' y='11750'>
                    <zone-style>
                      <format attr='border-color' value='#009bd0' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='2' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='10750' id='20' type-v2='text' w='98770' x='615' y='1000'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='16'>Decision Tree Classifier for Breast Cancer Mortality </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#009bd0' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='2' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f0f7fa' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='9000' id='9' name='Decision Tree Classifier' pane-specification-id='2' param='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]' type-v2='color' w='11692' x='63231' y='14375' />
        <zone h='20375' id='29' name='Total Class Counts' w='16000' x='1846' y='12000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='43' param='vert' type-v2='layout-flow' w='98770' x='615' y='1000'>
                <zone forceUpdate='true' h='10750' id='20' type-v2='text' w='98770' x='615' y='1000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontsize='16'>Decision Tree Classifier for Breast Cancer Mortality </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#009bd0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f0f7fa' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87250' id='3' is-fixed='true' name='Decision Tree Classifier' w='75846' x='615' y='11750'>
                  <zone-style>
                    <format attr='border-color' value='#038fc3' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9000' id='9' name='Decision Tree Classifier' pane-specification-id='2' param='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]' type-v2='color' w='11692' x='63231' y='14375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87250' id='18' is-fixed='true' name='Entropy vs. Class' w='22924' x='76461' y='11750'>
                  <zone-style>
                    <format attr='border-color' value='#009bd0' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='163' h='20375' id='29' is-fixed='true' name='Total Class Counts' w='16000' x='1846' y='12000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8C794AB8-6D00-4C6A-8840-F74DAAAB4295}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Decision Tree Classifier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[Show Path Set 2]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[Show Path Set]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762855010314:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762855411723:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762856574989:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762857160718:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_3388958750344560650:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Condition:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:DEPENDENCY_NAME:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Entropy:qk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:FINAL_OBJECT:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Samples:qk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Show Path (copy)_3388958750347161611:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Value:nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[usr:Calculation_1713056762856116236:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72EC7F8E-9226-4728-B4C5-EF82B81FB78A}' />
    </window>
    <window class='worksheet' name='Entropy vs. Class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_3388958750510841869:qk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:DEPENDENCY_NAME (Classifer):nk]</field>
            <field>[federated.0663e4o1pol7sn1684anz0638u52].[none:Entropy:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35503D64-0161-45B3-97B7-C45AB571B9FD}' />
    </window>
    <window class='worksheet' name='Total Class Counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0663e4o1pol7sn1684anz0638u52].[cnt:Class:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FE6DF5EF-64C1-4513-B133-906657FD14E8}' />
    </window>
    <window class='dashboard' maximized='true' name='Decision Tree Classifier for SEER Breast Cancer Data'>
      <viewpoints>
        <viewpoint name='Decision Tree Classifier'>
          <zoom type='entire-view' />
          <highlight field='[federated.0663e4o1pol7sn1684anz0638u52].[none:Calculation_1713056762854825993:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Entropy vs. Class'>
          <zoom type='entire-view' />
          <highlight field='[federated.0663e4o1pol7sn1684anz0638u52].[none:Class:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Class Counts' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9DC4971B-7057-4AA0-84D0-C01BAC40E420}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Decision Tree Classifier' width='384'>
      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
      sLBFhQSAEJ9hWRbT09OMjIwwMTFBKBRaWHPt8XiorKykqqpq4X/Ly8sXOpp4PM69e/fo7+8n
      Ho+j6zq1tbU0NTXR1NREbW3tkit3UqkUvb299PX1LQRHTU0NTU1NNDc3U1tb+9C/6Eopuru7
      uXTpEk6nk8OHD7N79+6Ch3oMw+D+/fv09PQsrIX3+/00NzfT0tJCQ0PDI+8mhoaG+OCDDzAM
      g3379nHo0KEV7zY6OTnJqVOnSKVSdHV18dRTTy1rKeZ6BUCeUooHDx5w+fJlYrEYe/fu5Zln
      nlnR566UYmRkhMuXLxMOh2lvb+fkyZMP/XyVUoTDYcbGxhgfH194+M3tdtPe3s6ePXuWfKpb
      KUUkEmF8fFyeAxACIBgM0tvby+DgIMlkcmGPnc7OTurq6qirq6O0tPShB5akUimuXr1KX18f
      pmlSV1fH/v372bFjB16vd1lXhNlsllu3btHd3U0ul6O6uppnnnmG7du3L3zfR8lvFXDr1i1a
      Wlo4efIkPp+voM8h/5DYtWvXSCQS+P1+Dh06xI4dO6isrFwywHp7ezlz5gzl5eW8+OKLVFVV
      rXiieWRkhPfeew+Px8Prr79OQ0PDpj0jIP/AV2trKxcuXODOnTskk0lefPHFZYeApmkLV/FX
      r17l1q1bxONxXnvttZ8KAU3TFlb3HDhwgGw2y/DwMA8ePKCnp4e7d++yY8cOjh079tAhsnwb
      +btVCQBR1MLhMJcvX2ZkZARd16mvr+fw4cNs27aNkpKSJTu8QCDAe++9RzKZpK2tjUOHDlFd
      Xb2iDisSifDOO+8QiUTYtm0bBw4coL6+ftnr/O/fv8+tW7fo6OjghRdeKPjKN5VKcfr0acbG
      xqiurubZZ5+ltbV12R1ZKBTi3Llz1NTU8Oqrrxa0sVssFuP06dP4fD6+8pWvFBxk683hcPD8
      889TVlbGpUuXqKio4OjRoytqw2638/TTT1NaWsr58+e5cOECL7zwwiN/l/Lj+Z2dnezcuZNo
      NMqdO3fo6elhdHSUF154gba2tkV/FyUARFFSStHX18f58+fRNI19+/axZ8+e+aVxy+y8g8Eg
      b731Fna7nddee42mpqYVX6lGo1HefPNNAF555RW2b9++ojZyuRyXL1+mqqqKkydPFtz5Z7NZ
      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
      lztFbuaeFgqFLVlhblVSW1Q5uep5Q3smm7kvmuHVnvOzQpIkDAYDmczTO5HWHECNssRiMaLR
      KIFA4JnqsbCwQDKZpKGh+sNCxWKRcDiM2+3e1Mp7fn4es9msb/OrIRpdbrdst6/fzG4tstks
      Qogt2YlsBcVicctW35tlMytv7d1Yy2huBO3diMXWb1f+VWI0GjGbzWvqUXMANdZEVVUuX76M
      qqr09PQ8Uz2uXLkCsCk9Hj58SC6Xo729vWoZqVSKYDCIz+fbVB4hGAxiMBhwuSo7Wb0SzYls
      Ro9cLrdlq/ZSqfTcOIDNhG804720tFS1DIfDgSzLzM3NPdNdkdFoxOl0sri4+FSnWHMANZ5K
      qVTi7NmzPH78mNbWVtra1m9V/FVQKBQ4efIkc3NzdHZ2Vr0TmZub49KlS5jNZrZv316VDCEE
      n3zyCYqi0N3dXXX1zeLiIsFgEI/HU/UuQgjB9PQ0AG53+bba5dDCWVtBLpd7bqpeEolE1Z91
      OpdbMMzOzlZtvE0mEw0NDUQiEYLBYNW6bBZJkggEApRKJe7fv/+ln9ccQI1VFAoF7t+/z89+
      9jMePXqEz+fj6NGjX/sZgHw+z507d/jZz37G5OQkDQ0NvPLKKxXrkc/nuXLlCr/+9a9RFIX9
      +/dXZTBzuRynTp1icnISt9tNf39/xTJgOaxw6tQphBD09vZWfV8jkQjT09PIsozX661KBkA4
      HK76s09jfn5+S+VVy2b0cLvdGI1GQqFQ1cZbkiR6e3sBOHv2LPF4+YliXyW9vb1IksTVq1eZ
      m5tb9bNaDVoNMpkMCwsLjI+PMzU1pZd9dnd3c/jw4U3FqTeKEIJMJsP8/DxjY2PMzMxQKBT0
      L9KhQ4c2HOtWFIWlpSUePnzI6Ogo+Xweo9HI/v372blzZ0V6ZbNZHj58yM2bN8lms5jNZl57
      7bWKE8BCCKamprhw4QKpVAqXy8WOHTsqkqGRSqU4ffo0QggCgUDVOQBVVRkdHa3qs2vx6NGj
      Te2OtoqJiQn27dtXVZJdlmXa2tqYnJzk9OnT/PCHP8TjKT8g52ls376dO3fuEI1G+cUvfsHh
      w4fp6ur62hdTjY2NdHd3Mz4+zvvvv8/w8DA7d+7EaDTWHMB3CVVVKRQKZDIZFhcXCYfDhMNh
      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
      zMyMflho5eEnLT5cV1eH1+vVV6RP+xLlcjnm5+d1XRYWFlY5HM3QauEEzVhrumQyGV2Pubm5
      VbE8t9utG0tND5fL9aU4Xjab1WVoqwFNxsotn8/nw+Vy4Xa7V51ejcVijI+P6y8PLK+OVxpd
      7T6u9TImk0l9xby4uKjfy5UytBX2F7+MqqoyPj7OrVu3WFhYAJbrrLu6umhpaSlrNDW007U3
      b94kFAohhMDn89HR0UFrayuNjY1l45/FYpHLly9z//59/cTxjh07Kuo4WiqVGBkZ4ebNm6iq
      Snd3Nzt37qSxsXFDq/dIJMKvfvUrjEYj77zzDj6fb8O/WyORSPDLX/4SRVH4/ve/T2NjY0Wf
      fxYOQGNycpJTp07hdrv50Y9+tOmpc5U6AI1IJML777+Poii8++67VT2HeDzOiRMnSKfT/OAH
      P6CpqWndz2jVOPfu3dPPHOzcuZPh4eGKkrpLS0vcv3+f+/fvoygK/f39HDx4sOzOqlQqPf8O
      IJPJ6IZK21JrBjsQCOiGyuv16snLL3q+8fFx7ty5o68MHQ6HnrSrr6/H6/WuW8tbKBSYmppi
      dHSU2dlZPSzhdrv18kFND4vFoiczNbTyr7t37zIzM6PHA7V4slb7azKZyoYYgsEgd+/eZWpq
      ilKppJcvtra20tDQgN/vLytjaWmJq1evMjU1haqq+P1+tm3bRktLC36/f0M1zYlEguvXrzM6
      OoqiKHi9Xrq6umhra9MNdzkZ0WiUs2fPMj8/j9PpZGBggN7e3opK3JLJJB9//DEzMzPYbDYG
      Bgbo6+srG6JZST6f54MPPiAYDNLX18eBAwdwOBwVxaOLxSJnzpxhYmKCjo4OXn75Zdxu94Zl
      qKrKe++9x9LSEj/60Y+q7umj1aofP368qmZ5z9IBaIfSTp06xa5duzh48OCmcgLVOgBY/m78
      4he/oKGhgXfeeacqPVKpFH/5l3+JzWbjxz/+8YZ10EKXn376KePj47S3t3Ps2LGKHKIQgmw2
      y7Vr17h37x719fW8/fbbOByONT/z3LaCyGaz3Lhxg/v371MoFPTTmG1tbfj9fj3OvBba1vqT
      Tz4hFovhcrnYu3cvXV1d+iGLjVAqlbh37x43b94knU5js9n0uu6GhoYNneCLRCJcuHCBUCiE
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Decision Tree Classifier for SEER Breast Cancer Data' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3hT59n48e+RZMt7L3kPbLDBZs+wV5wEAqTZTenKm9m389c2bdqMzqRt
      2r55szreNG1Wm1HSYBJCIGA2OCxjwNt4yXsPybKk8/uDWGHYYBtPdH+uy1eIju9zP3okn/vM
      51FUVVURQgjhdDSj3QAhhBCjQwqAEEI4KSkAQgjhpKQACCGEk5ICIIQQTkrX1wLlrydGsh1C
      CCFGWJ8FAKD5npSRaocQQogRJqeAhBDCSUkBEEIIJyUFQAghnJQUACGEcFJSAIQQwklJARBC
      CCclBUAIIZyUFAAhhHBSUgCEEMJJSQEQQggnJQVACCGclBQAIYRwUlIAhBDCSfWrALS2tNDQ
      0EBzczN2u33QybIOH6KiorzP5bU1Nezfu2fQ6wewdnfT0NBwyY/FYrmq9fams6OD7BPHMRor
      AbDb7fz+N0/T3t4+JOu/uD86Ozv584sv8ORPH6Wzs5O9e3ZTX1836PVXVJTz21//ipee/99B
      xXef19etLS2oqjrotgyl0rMlnDp5kq4u86i2o621lYaGBmw2m+M1u91+7m+pqWnY8p7/Pezq
      6mJ35i7a29qGLZ8Yv/pVANbfdAMJkQZiDSEkRIXz26d+NahC8Mj/+y4fffBBn8sPHtjPA/d+
      bcDrPd/ePbtJiDRc8rNzx/arWu/F/vnG6yTFRrM2fTVpExN59ZW/YbNZ+dnjP6W1pXlIclzc
      H4/9+BFe+/vf8PLyBuC+r36ZwwcPDnr9t968huwTx3Fzdx9U/M7t25kQFU5KQiyx4aHEGkJ4
      9ZW/Dbo9/fGnF57j3bf+1euypsZGbk5fzay0Kdywchkzp0we1rZcybob00mINLD1gy2O1w4f
      PEBCpIElC+YOeH2Xe+/nO/972NLczJfvvpPSs2cB+NZDD3Lm1KkB5xbXpn6fAvrfF/9EWXUd
      v/vjszz7+2f4y0svOpadPVvCRx9+gLGy8oKY0rMl7N2zm8aGBgDeePvf3HXPPY7lRYUFHMnK
      oqWlBYDV6Tfw0SeZjuVWq5V9e3aTufMTurq6ALBYLFSUl2GxWDh08ABFBQUX5FyybDkN7Sby
      zpYBcKqwmIZ2E6vTb6Curo7W1la6urooKS4CoNtiYfeunezbu+eCPbXmpiY+/mgrp3JyLumL
      0rNn+eZDD/DzXz/FWWMNBWWVzJ2/4JLfs9lsnD6Vw8ED+2ltbb3gfWWfOE72ieMXHJlcrj9q
      qqvJOnyIu7/0ZW678y70ej3bM/eyfOUqR/yxo0fYvu0jxxFIT18BGI2VjvWqqkpRYQG5Z87w
      7e99n+vTbwSgtbWV7ds+4sinWY69+b7W0SMuLp6a5jbqWjv4/iM/5hdPPg6c2/utq61FVVUK
      C/Kx2ay9thGgo6ODY0ePcOzIEbq7ux2vt7W1ceTTLAry81BVlcbGRg7u30/W4UOUlZbSdl6f
      Ajz52E9oam4iJ7+Ispp6Xn71dceysyUlHNi/jyqj0fFaRXk5XV1dnDp58oL3DNDY2Mje3ZmO
      DSf0/j3v7Tt1vjnz5rF1S4bj/z/8YAvXLVx0we/01u8X919dXV2v772vvusRHBJC5v5DTEpJ
      ocpoZMf2bZw6lUNZaSldXWbKSkuxfPa3BVBZUYGps/OS9YhrlNoH/nJcbTZZ1GaTRZ0xc5b6
      /J/+4vj/nz7xMzVl8mS12WRR//7GP1X/gAB1+cpVqr9/gLp991612WRRf/7rp1QPT0916vTp
      6sRJk9Rmk0WdO2+++ueXX1GbTRb16/fdr4aGhakzZs5SvX181OLKKnVTxgdqfHyC2myyqHWt
      Hep1ixarkZFRalx8vJqaNlWtqGtQ9x0+oup0OjU6JkaNi49XNRqN+sH2Txxt6/kpLKtUATW3
      uNTx2tp169X/98iP1ImTktWJyclqTXObOnvOXDVt6jQ1MWmiuv6WW9Vmk0X9NDtHDQszqEuW
      LlODgoPV3/7hfy5Y9/cf+bE6d/78S3LWtbargHq6sFhtNlnU2XPnqfEJE9RJKSmqn7+/evx0
      nlrb0q6mpk1VkyZOVJMnT1anz5zVr/74wu13qK6urmpQULAaExurFldWqxGRUeqWbdvVZpNF
      ffib31Ijo6LUufPnqwkTEtWzVbXqvsNHVB8fH/V3f/wfVaPRqH977Q212WRRGzvMakxsrAqo
      kVFR6vKVq9Tjp3PViIhINWXyFDUgMFD90le+qjabLH2uo9lkUd/6938c7WvsMKs//unj6pTU
      NLXZZFGffub36g03rVG/cPsdKqAWlFX22sYSY7Xq4+OjTklLU8MjItTpM2aqda0dataJHNU/
      IECdMWu2GhkVpf73t7+jPvKTn6oeHh6qr6+fGhMbqz7/58+/k1WNLaqLi4u6KeODSz6X73z/
      B2pISKg6Y+Ys1dXVVf37G/9Um00W1d/fX42JjVOjoqNVvZub+pMnnlSbTRb1/Q+3qb5+fuqU
      tDQ1ICBAPZlX2Of3/OLv1Pl5Z8ycpT75y1+rISGhamOHWW02WdSJk5LVX/3md2pMbKzabLL0
      2e8X99+99z94yXvvq+/O/x6e/++Vq69XNRqNGhoWpsbExqoHjx5X4xMSHN/v/LPlqk6nU7Nz
      Cy7pQ/m5Nn8uOyNYX2bOns3vf/cbAB5/9Ec8/6e/cOOatTzzm6d59vfP8PTv/8DPH3+MrZ/s
      YsbMWXT0ck58y+b3+d0fn2XtuvXU1dY6Tmv0eO/f71JlNJJ14iQ6FxfSVyzlH397mSVLl+Pi
      6srHu/YQGhbGuhvTOXHsGAuuW9ivtj//7P/wre9+j/sefJhN77xNt7WbnfsOYDabmJyYwOlT
      Obzwv89yy22386vf/JZDBw9w1623cO/9D6AoCgDlZaWkpk29Yq6/vfoakVHRqKrK2vRVfPTh
      FlasWs2Z06c5XVRCSEiIY2/ySv3xf39/lVVLFnH/Qw9z6x13XrCsrLSUl//yZ07k5hMcHMIt
      a2/irTff4LqFi+jo6OCVl/+Pbbt2M236DAA0Gg2Hj2UT6u/D9sy9hBkMfOvhB1mwaBF/fvkV
      aqqrmZmawn/d/yBarbbXdfQoLy9jzrQ06mprcHNzZ9OWDx3Ldn6yg5WrV3PsVC6mzs5e2/iV
      r99L1okcQsPC6OjoIDEmkvy8XLIOHSImNpaPPtmJTudCdVUVhvBwKsrLCY+I4Mc/ffyCdtRU
      V9Hd3d3r53Lv/Q/w0yd+hkaj4alf/Jx3/vVP1m24BYBf//YZblyzht8+9SuOHT0KwPe/+y2+
      /8iP+ca3vo3ZbEan0/F4+qXf83+8+a9LvlMXS0hIICAwgCOfZhEUFIzdbiNp4kTH8j/87re9
      9vvF/RcbF4fZbLrgvVssll777vz1n++d/2xmWsoknn3xJRYvWQrAV77+X7z291f4rwce5P33
      NjFv/gKiY2J6jRfXnkEVgMaGBry9vOnqMnO2pIS//fUvvPXmG1RXV9Pa0syZU6cwhEcwY+Ys
      ADy9vC5Zx/0PPcy9X9lIUtJEbr/rLh7+5rcvWH7m9CkWLl6Mu4cHAMuWryT39OlzBUCnIzQs
      DAAPDw+g/xcfN37lazzy6E8ByMvLpaG+ga9v/Py0VGF+Pnm5uVit3Xzli3dhtVppbGigqbGR
      gMDAz96PN42NjZfNo6oqr//jH7z9rzfRaLRUGStZuep6YuPiSb/xRlKTJjB3/jwe/MY3CY+I
      uGJ/XE5BQT4oCj/4zrmY8rIyCgvyuW7hInQ6He/8ZzNhYYbLruPM6VPce/+DKIpCmMFAatpU
      cs+cZvKU1MuuIyQ0lL/87e80Nzfz5uuv8tB9X2fH7n0ATJw4iVdeexOdTseO7R/32kaz2cRP
      f/wIWYcO4eLqQpfZjKmzk5Wrr+dPLzzPhOhIli1fwSOP/hRDeHif7ff8rGA2NjYSFBx8wbKj
      WVn85te/oqvLTEtzC6lT0xzLIiMjAfDw8ARVpctsJj83l3W3nCsQbm5ufX7Pe5z/nerNjWtv
      ZuuWLQQFB3Hjmpv71e8X919v+uq7gfjixo388snHyT5xnPf+/Q53fvGeKweJa8aAC4DJZOJP
      Lz7PkuXLcXXV4+npyRduu52UKVMA0Lvq6ejooL6ulrbWVrx9fHpdz3f+3w/4rwceYs+uXXzr
      Gw8ycVIyLi4ujuWBgUEc/2yPDM7dsRL22Ub/asTEfr53E+AfQHh4ON/9wQ8B+O4PfkhUdAyv
      v/oPYuPi+eLGjQD84MePXvA+lq9cyf1f+wo11dWOQnSx06dyeOG5Z8/taYeFcd9XvwyATqfj
      tX+9TU11NZv/8x5fuusOisuNV+yPywnwD0CjKPz3d77riAkICKSluRm9Xn/FjT+c6++K8nN3
      aNntdozGSkfBu9w69K56pk6fDpzr22kpk6irrQUgIjLSsfHqq41vvvYaleXlHDp6HFe9npSE
      OAAio6LY/+lRCvLzeOF/n+Wh++/lkz370SgK1m7rJe0IDg4mNW0qr77yMj//9dMXLPvmww/y
      11f+wYpVq/nH317m/ff+3Wc/uLi64uHpSUlRMVFR0QB9fs97nP+d6s1Na27mvx+6n+CgYB59
      /ElaWz+/jtJXvzc1NV7Qf8Al772vvrscjUbBet61gsDAINbf8gWeefopjh09yptv99034trT
      7wLwxmuvsnvXTg7s34dGo+Hlf7yOoijcftfd/P63v+He+x+gqbGR4qJCXvq/vzFtxkxuv2U9
      a25eR35eLv/z/IsXrG/ZdfO59Y478fHxwWaz4ePji8n0+d7L+lu+wK9+9iSPP/pjPDw9+M+/
      32X77n0whLca3rxhA7/6xc947e9/J2niRPbt3cPX7r2P2++6m+/+98OEhIbg5ubO++9tIuOj
      jx1xN65Zy8zZc1i5ZCF33n0PZWWlzJ4zly9/7fM7dtzc3DF1mvjPpn9TUV7GBxmbSZk8hU8P
      H+bpX/2CNTevo621FTe9G66urlfsj8tJnTqV6JgYnv7lL0i/8SbycnMJj4hg5arV/e6Lu7+0
      kW88cB9ubm5knziOqsLCRYspKiy8bFx9fR0//dEPsVgs7Nyxg7Rp0wgOCel3G/0D/KmsrOCf
      b77OnsxMqqrOXaR94X+fJS/3DPMWXIfJZMLHxxeAhMRE/vLSiwQEBDB3/nxmz53nyPGLp3/D
      rTevoaqqiuiYGPbu3s22nZm4u7uz4+Nt5Jw8yf/9+aU+T5HAudNj3/jmt3novq9z34MPU1Jc
      xHf+3w96/Z7/6eVX+tW302fOpKmxkebGJmbNmcMn2z//LvXd7wWXrOfi9+7u4d5r311OwoRE
      fvf0U5zKyeG2O+8iLCyMr/3X/Vy/fAm33nFnnzts4tqkfeKJJ57obcGTR2t4JO3zQ+mAgECC
      goJZd8sXePqZPxD42d7hytXX46p35dTJk+jd3Pjy175OaGgYG75wK+1tbRQW5DN77lzSpk4D
      YOq06YSEhhIeEcnRT7MoKS7mgYe/warr0wHw9/dn1pw5+Pj4sDo9ncxdO2mor+fpZ/7AjJkz
      URQFLy8v5i24DgAFSJ48hYiIyEveg4uLK4uWLMHV1fXc7yoKKSmTCf/sd/38/Llp7Vryc89g
      rKxkwXULWbn6etKmTmPylFRysrPp6Gjnrnu+RGJSkuMagKIo3HLrbXh6elFcVIjBYGD9F27F
      z88fjaJh4eIlhBkMRERFcXD/PiYmp3Dr7XeQnJJC2tRp2Gw2Pj18iPb2dp763e+Jio6+Yn/0
      5J06fcYFG9g58+bj7+/PLbfdRm1tDQX5+cTExnLH3V/E29v7gr46n6Io59r6Wf9MnDSJCYmJ
      7Ph4G76+vjz/p78QEBh4SX9fzNPTC1dXV7y9vUm/aQ0//9VTuLq6oqAQERFB8uRzt2JqNJpe
      2zh79hxa21o5nZPDhi/cyvQZM5gzdx6TU1MpLyvn6KdZhBkMPPGLX+Hl7c3UadPp7rZQWJDP
      1GkziIj8/HOPjY3jhpvWUnb2LG0traxZt54pqWnMmj2XQwcP4OLiwn0PPkxcfDyTU1NRFIX5
      C67D08sLBYXwyEhSJk9m4eLFhISGkpN9gojIKBYvXcYNN6255HseEhp6yXfqYtNmzCQoOJiI
      yEiWr1hJypQpKIqCn38As+fM7bvfL+q/nr+d89/7ylWre+07b28fx/fQVa93/Fuv17Pguuso
      LyuntqaaJUuX4enpSURkJH958QV+/NjjxCck9Po+xLVJUft4ekf56wma70kZ6fYIIUbQyewT
      /OuN19m+bRv7so6g1WpHu0liBMlQEEI4sZKiIqxWK//693uy8XdCcgQghBBOSo4AhBDCSUkB
      EEIIJyUFQAghnJQUACGEcFJSAIQQwklJARBCCCclBUAIIZyUFAAhhHBSUgCEEMJJSQEQQggn
      JQVACCGc1GXnA/B77fRItUMIIcQI63MwOCGEENc2OQUkhBBOSgqAEEI4KSkAQgjhpPq8CKz7
      495eX7d+e+GwNUb0X1+fjxBC9Ndl7wKSjf3YJZ+NEOJqySkgIYRwUlIAhBDCSY1YAairq+PE
      iROOn4KCgkGtZ/fu3dTU1Fyy7j179jjW+c4771x1e+12O8eOHePAgQO0t7df9fqEEGKsGdEC
      cPz4cZ5//nkOHDhAfn5+r7/3/PPPX7Y4nDx5kqamJsf/5+bm8rOf/Yzy8nI++OADADIzM6+q
      raqq8swzz7B9+3aKi4s5duzYoNdVU1PDr3/966tqjxBCDIfLXgQeSikpKaSkpJCXl8ett95K
      UFAQNTU1vPjii3R2dpKenk5gYCDHjx+ntLSU6dOns2DBAl5++WW6urqYP38+69atu2S9b7/9
      Ng8++CApKSmXLNu7dy9bt27FZrNx5513MmHCBJ577jk6OjpISUnh1ltv5YUXXqC+vp7w8HAe
      eOABAPLy8ujs7OSxxx5DURSAS9q6fPlynnnmGb73ve9RVFTEyZMnWbp0KS+99BIWi4Xm5ma+
      973v8cYbb5Cfn8/jjz/OAw88wNatWykpKcHd3Z0f/ehHw9vpQghxGSNWAHrz9ttvc9NNN5Ga
      msoPf/hDnnrqKaZOncrq1atJSkqivb2d7373u7S2tvLLX/6y1wJgNBpJTEzsdf0pKSmkpaVx
      6tQptm7dyvXXX4+qqvzoRz+is7OT2tpaKisr+clPfoLFYrlknT0b/97aOn/+fM6ePQuAyWSi
      rq7OseF//PHHee+998jLy2Pjxo389a9/5dFHH8VisXDo0CF++ctfDm1HCiHEIIxqAairqyMh
      IQE3NzdCQ0NpaWm5YPnJkyfZtm0bycnJ2Gy2Xtfh7+9PTU0NkZGRlyzbvHkzzc3N+Pn50d3d
      zeTJkykoKODJJ58kKSmJr371qyxatIinn34aPz8/vve976EoCv7+/pw4cWJAbe3h5eWFu7s7
      7u7uXDzMkqurK3fffTfPP/88drudRx55BDc3t4F0mRBCDJlRvQto4sSJfPDBB2RnZ1NTU0NQ
      UBAeHh4cPXqUiooKzpw5w/Tp04mLi8Nut/e6jtWrV/PSSy9x5MgRtmzZcsGykydPsmLFCvz8
      /AAoLS0lNjaWe++9l+PHj1NTU4Ovry9f//rXKSsro6urC4DU1FTKy8t5//33ycrK4uTJk722
      1WazceTIEbKysvp8j+7u7lRVVZGTk0N9fT1dXV1s3LgRq9VKQ0PDEPWkEEIMnPaJJ554orcF
      PztYxmPzooclaXx8PC4uLkycOJGSkhIKCwv50pe+hL+/P9HR0eTm5mKz2bjuuus4evQoLi4u
      TJo0iaSkJAAiIiLw8PAAIDY2Fl9fX7Kzs/H29nacDkpMTCQ8PJz9+/cTExNDdHQ0cXFxHD16
      lLy8PDZs2EBoaCinTp3i5MmTXH/99cTExACg0WiYP38+ubm5VFdXk5yczJw5cy5pa2BgINnZ
      2UyYMIGYmBjCw8NxdXV1rCc4OJiwsDC8vLzIzs5m0qRJVFRUcPz4cWbNmkVaWtqw9K8QQvRH
      n8NB6/64V542FUKIa5g8CCaEEE5KCoAQQjgpKQBCCOGkpAAIIYSTkgIghBBOSgqAEEI4KSkA
      QgjhpKQACCGEk5ICIIQQTkoKgBBCOCkpAEII4aSkAAghhJOSAiDENaCjo4NNmzbR0dEx2k0R
      44gUACGuAS0tLdTV1fU5UZEQvZECIIQQTmrAU0IajcbhaMeI6da5j3YTrlpEgDc63ajO5imE
      uAYMeCsSHh4+HO0YMduKW0e7CVctJkQ2/kKIqyengIQQwklJARBCCCclBUAIIZyUFAAhhHBS
      I1YArFYr3d3dI5VOCCHEFVzV7SSbN29m79696PV67r//fqqrq1FVlVmzZl3yu4cPH6alpYUb
      brjhalKOa11mE5tf+yte3r6k37HR8frWt/6BqaOdybPm46p3460//5EHHv01KLDz/bcBaKip
      5mvff3y0mi6EuAZdVQFobm7mnnvuISgoiOeee4477rgDu91OZmYm+/fvZ8qUKSxfvpw//OEP
      NDY2smrVqqFq97hkt9lIv30jH7/7xgWvR8RNwBAVS1BYOPXVRmYvXonNZsM/KJh1G+8n98Sn
      tDQ2jFKrhRDXqiG5oTw0NBSz2UxDQwM2m40333yT+fPnk5GRgdlsZuXKldjtdqd/TN3d0+uS
      11RVpaK4ALvNxr5tGazbeB8oygXLs3Z9zD3ffGQkmyqEcAJXXQD27NnDu+++y9KlSx2vRURE
      EBcXR1hYGF5eXuzbtw+tVsvEiROvNt24Zupop6GmiuaGWprqaqmrriQpdTqqqhIUaqAg5zgN
      NVU01lZTVVqMh5cXx/ZnMnvpapTzioIQQgyFqyoAq1evpqKigoiICMLCwmhqagJg4cKFHD16
      lISEBGJiYvD09MTT05OwsLAhafR4ZbF00VBbzYyFy2lvayFr1zaSUqcze/FKCk6dYN3G+6g8
      W8SEyVPp7rZg7e4mNimZsMiY0W66EOIapKiqqva2QPfHvVi/vXCk2zPsxspQEKqq0m2x4KrX
      Dzh2dbzPMLRIjGdGo5GMjAzWrFkz7odrESNHngMYJYqiDGrjL4QQQ0UKgBBCOCkpAEII4aSk
      AAghhJNyuoHlC4srRrsJVy0peAKx3q6j3QwhxDjndAXg+b/+e7SbcNUeWvmT0W6CEOIaIKeA
      hBDCSUkBEEIIJyUFQAghnJQUACGEcFJSAIQQwkld1V1AFRUVvPrqq3h6enL//fej78fQBm+/
      /TYrVqwgICDgsr+3fft2oqKirqkRRD3dXbll6TTc9S78Z3c2NY1tANy2Yjpe7no++TQfb083
      piZGYLXa+Nf2o6xfkkagrxdH88o5llc+yu9ACHEtuaoC8Morr7Bx40YURcFisXD8+HGmTZvG
      iRMn0Gq16HQ66uvrCQoKIjU1lT179hATE4PZbObEiROO12JjY8nIyGDZsmUkJCTwzjvvcPz4
      cb74xS8O1fscE9z1rry78xigsGHpVF7fmgXApl0n0Gg0fOmG2VisNl794DAAGkXh0zNlVNQ2
      c9/666QACCGG1FUVgLVr1/LnP/+ZpKQk0tPT2blzJ8nJyWRmZuLm5obZbOauu+7ixRdfxG63
      U11dTXl5OV/+8pd56623HK+988473HLLLTz77LMsWLCAiIgIJk+ePFTvccyob25nYkwoC9Li
      2LTrhOP1+alxLEiLZ/Oek0SHBXBP+rlC8O4nx+i22rh95Qz2ZRePYsuFENeiq7oG0N3dzTe/
      +U2qqqooLy+nra2NyspKx/KNGzcSGRlJaGgor7/+OjfddBMAOp3ugtcURcHb25s77riDzs5O
      /P39sVqtV/fOxqC48EBmTorib5sP0txmwtPdFY1G4UhuOb95dTuLp0/gZGElr23NQu+iw9vD
      jS/fNI93dhzjVHHVaDdfCHGNuaoCoNVq+ec//0lKSgozZswgISGBo0ePct111zF37ly8vM5N
      gbh27VpmzZqFl5cXCxYswM3N7YLXvvOd73DgwAHa29u544472Lt3L25ubtfcBDI6rQatRsPd
      188iNSGcB25ZhAKsXZTKPemzeX/3SQxBvmy8cQ7ltU1YrDbqmtq4c/VMVsy+dq6FCCHGBqeb
      EGbynb8Y7SY4hAf5Yqwf+DzJp/4pQ0GIC8mEMGIw5DbQUTSYjb8QQgwVKQBCCOGkpAAIIYST
      kgIghBBOyunmA5gUdfknkMcDq9WKTud0H50QYogNeCtiNBqHox0j5pXHvjTaTRBCiDFhwAVA
      bjETYuxQVei22Slp6aZC9aSqw0aoXUWrUUa7aWIckPMIQoxTqqpS0tTJjsJ6WtraqVI9ySxv
      Jae1gvWTw/B1cxntJooxTi4CCzFOtXVZ+bignoKGDjYVNJOjBvGfwhaaTN28d6oam73XZzyF
      cJACIMQ4dbiiGYvNzp6zTdhVFRfsWGx2Np2uxmy1U9FiGu0mijFOCoAQ41RDZzeNpm4Awl2t
      rNEUf1YEVCw2O9VtXaPcQjHWyTUAIcYpDxctXq5aAGotWvYQQTcaNAq4aBS5BiCuSI4AhBin
      Zkb44qPXEevnjhUN9XgACtfF+KPVKMQHeIx2E8UYJ0cAQoxTBm89ySHeAFQ3tZJXXEpqYhx+
      3p6smBCEi1b278TlSQEQYpxSlHN7+/EBHnxyuot6xcwEPz2rpoTjrdehyKMA4gpkF0GIcUxR
      FMJ93Fge7cVkTSPzwz3wcXNBka2/6AcpAEII4aSkAAghhJOSAiCEEE5KCoAQQjgpKQBCCOGk
      pAAIcQ3o7j43JITNZhvllojxRAqAENeAng1/TyEQoj+kAAhxDejZ8EsBEAMhBUCIa0BnZycA
      JpMMAS36TwqAENeAxsbGC/4rRH9IARBinLPZbFRWVqIoCpWVlXIhWPSbFAAhxrns7GzMZjPT
      p0/HZDKRk5Mz2k0S44SMBirEOFZUVMSRI0eYMGECs2bNorW1laysLLy8vEhISBjt5okxTgqA
      EOOQxWIhKyuLU6dOERERwaJFiwBYtGgRJpOJHTt2UF1dzZw5c3BxkZnBRO+kAM8yafAAACAA
      SURBVAgxjtjtdvLz88nKysJkMpGamsqcOXPQas9NDeni4kJ6ejqHDx/m5MmTFBcXM3v2bJKS
      ktBo5IyvuJCiqqra2wLdH/di/fbCkW6PEKIXqqpSVFTEp59+SmtrK6GhoSxYsIDg4OA+Y2pr
      azlw4AA1NTX4+Pgwe/Zs4uPjZa4A4SAFQIgxzmg0cuDAARoaGggICGDOnDlER0f3O76srIxD
      hw7R1NREYGAgCxYswGAwDGOLxXghBUCIMaq7u5tDhw5x+vRpvLy8mDt37qD34FVVpbi4mEOH
      DtHe3k5KSgrz5s1Dp5OzwM5MPn0hxiCz2czWrVupra1l2rRpzJw503GefzAURSEhIYGYmBiO
      Hj3K8ePHqa+vJz09HTc3tyFsuRhP5KqQEGNQZmYm9fX1rF69+oKLvFdLp9MxZ84cVq1aRX19
      PXv27BmS9YrxSQqAEGNMbm4upaWlpKenExsbOyw54uLiSE9Pp6SkhNzc3GHJIcY+KQBCjDFF
      RUX4+fkRGRk5rHkiIyPx8/OjqKhoWPOIsUsKgBBjTG1tLRERESOSKyIigrq6uhHJJcYeKQBC
      jCFms5nu7m58fHxGJJ+Pjw8WiwWz2Twi+cTYIgVAiDGkZzx/Dw+PEcnn7u5+QV7hXKQACDGG
      2O12gBEbtkGGh3Bu8ukLMYZ0dXUBoNfrRyRfTx45AnBOUgCEcGIyLpBzkwIghBBOSgqAEEI4
      KSkAQgjhpKQACCGEk5ICIMQYodrt2Oua0Ne1oLa008dI7UPGrqo0dtloVl1p71aHPZ8Ye2Q4
      aCHGAHOpkbLHnqO9uIKothZqt+XQvWA6UT+5H62n+5DnM7aaeXZ/CeWN7bTaI8jeb2RGWRcP
      zovB3WVoRh4VY58cAQgxyqzNbRQ99Au6Kmrozi/Fo6IBa3ElHSfyKPnBM6ifPRw2VFq7rDy5
      I5/qti5KWy3U405lu5W8+nZ+u7sIuxwJOA0pAEKMsro3tqB2Weg8kQc2GwpgN5npOHoa05li
      Ok7kDWm+Lbk1WGx28uo7sKkACmarnVM17RQ3dpJb1z6k+cTYJQVAiFHWeaoQ1WoFwObuSvWK
      NFRAtdpAUejMKRzSfAX1Hdjs5/byXbExTakBVGyqivLZcuEcpAAIMcoUnc5xAVbptuJRVv/5
      QrsdxWVoL9XpNAo9J3lsKNSpnw88Z1fBRSNPBzsLKQBCjDKfJbPQ6F1Bo0FjteNTYEQBtD5e
      oFHwnjd1SPPNjvTDVatBo4ANDZV4AwperloUBaYafIc0nxi7pAAIMcoC1ixBH2XAc0YyurBA
      bC46XGIM6OMjCbh5OfoYw5DmWxofiMFbT0qIF4HuOnTYCPdyJcrXjRUJQYT7jMxAdGL0SQEQ
      YpRpXF2If+7H+N+wEG20gY7YYLRRYRgevovw/757yAdsc9Fq+MnyRBbFBhDuqSNE6STMU8fd
      0yL44vQIGSDOiShqH09/6P64F+u3F450e4RwXqqKsdJIxubNrLl5LeHDPC2kqkKl0UjGlgzW
      rllDRHj4sOYTY48cAQgxVigKaBTQas79e4TSaQDZ53dOUgCEEMJJSQEQQggnJQVACCGclBQA
      IYRwUlIAhBDCSUkBEGIMsn42NtBIMZvNI5pPjA1SAIQYg0a6AAjnJAVAiDGoq6trRPPJEYBz
      kgIgxBjU1tZ2TecTY4MUACHGoPr6+iv/0hCqq6sb0XxibJACIMQYVFlZSXv7yM3MVVVVRWtr
      64jlE2ODFAAhxiBVVdm1axc2m23E8u3evXvE8omxQQqAEGNQUlISRqORbdu2jcgF4eTkZEc+
      uSDsPKQACDEGJSUlsWjRIiorK3nnnXcoKioa1nwJCQksW7ZsxPKJsUEKgBBjVHJyMuvXr8fN
      zY0dO3bwn//8B6PROGz5EhMT2bBhAx4eHuzYsYNNmzYNaz4x+qQACDGGBQUFccstt7Bo0SLa
      29vJyMggIyNj2O7aCQwMZMOGDSxevJjOzs5hzydGl260GyCEuDxFUUhOTiYpKYlTp05x/Phx
      Nm3aRFJSEvPmzcPNzW3I802aNInExEROnz7NsWPH2LRpE4mJicyfP3/I84nRIwVAiHFCq9WS
      lpZGcnIyx44dIzs7m/LyclavXk1oaOiw5EtNTWXSpEmOfBUVFcOWT4w8OQUkxDjj4uLCnDlz
      2LBhA3q9ni1btlBbWzvs+W655RZHvpqammHLJ0aOFAAhxqnAwEBuvvlmvLy8+Pjjj7FYLMOa
      LyAggJtvvhlvb+8RySeGnxQAIcYxNzc3li5dSkdHB/n5+SOWr7Ozk9zc3GHPJ4aXFAAhxrmQ
      kBCCg4MpKSkZkXzBwcGEhISMWD4xfKQACHENCA0NHdFbNcPCwmhoaBixfGJ4SAEQ4hrg4+OD
      1WodsWEcvL29sVqtdHZ2jkg+MTykAAhxDei5N99kMo1IPnd3d2DkJ64RQ0sKgBDXAI1mZP+U
      e/LJ6KHjmxQAIa4Ber0eGLk9cldXVwC5FXSckwIgxDVAURQA7Hb7KLdEjCdSAIQQwklJARBC
      CCclBUAIIZyUFAAhhHBSUgCEGCNUux17XRP6uhbUlnZUVR3WOLuq0thlo1l1pb1bHfY4MfbI
      fABCjAHmUiNljz1He3EFUW0t1G7LoXvBdKJ+cj9aT/chjzO2mnl2fwnlje202iPI3m9kRlkX
      D86Lwd1FO+RxYmySIwAhRpm1uY2ih35BV0UN3fmleFQ0YC2upONEHiU/eAa1j1s7BxvX2mXl
      yR35VLd1UdpqoR53Ktut5NW389vdRdj72KMfbJwYu6QACDHK6t7YgtplofNEHthsKIDdZKbj
      6GlMZ4rpOJE3pHFbcmuw2Ozk1XdgUwEUzFY7p2raKW7sJLeufUjjxNglBUCIUdZ5qhDVagXA
      5u5K9Yo0VEC12kBR6MwpHNK4gvoObPZze+uu2Jim1AAqNlVF+Wz5UMaJsUsKgBCjTNHpHBdS
      lW4rHmX1ny+021Fcer9UN9g4nUah52SNDYU61ePzMBVcNMqQxomxSwqAEKPMZ8ksNHpX0GjQ
      WO34FBhRAK2PF2gUvOdNHdK42ZF+uGo1aBSwoaESb0DBy1WLosBUg++QxomxSwqAEKMsYM0S
      9FEGPGckowsLxOaiwyXGgD4+koCbl6OPMQxp3NL4QAzeelJCvAh016HDRriXK1G+bqxICCLc
      Rz+kcWLsUtQ+buLV/XEv1m8vHOn2COGUbCYz1X9+m7qP9lHX1EBIaBgRX15P4LplKJcZ6nmw
      cWarjbeyjewtqqWhoY6wkFA2pEWyPCEIjdL3qZzBxomxSQqAEGOFqmKsNJKxeTNrbl5LeETE
      sMapKlQajWRsyWDtmjVEhIcPa5wYe+QUkBBjhaKARgGt5ty/hzmuJ0wDDGTffbBxYuyRAiCE
      EE5KCoAQQjgpKQBCCOGkpAAIMYaMtzl2x1t7xYWkAAgxhvTM6avTDWyg3qsdknmg8T3tkzmI
      xzcpAEKMITabDQAXF5cBxXV1dV1V3oHG97Svp71ifJICIMQY0tnZOai4kT4C6DHY9oqxQQqA
      EGNIS0sLAO7ufU/m0huTyXRVeQca39O+nvaK8UkKgBBjhKqqVFRUoNVqcXNzG1BsW1vbVeUe
      aLybmxtarZaKigqZEnIckwIgxBiRl5dHe3s7ISEhA46tqam5qtyDiQ8JCaG9vZ28vN4nnhFj
      nxQAIcaAs2fPsm/fPgBiYmIGFNvQ0EBtbe1V5a+traWhoWFAMT3t3LdvH2fPnr2q/GJ0SAEQ
      YhS1tLSwc+dOtm3bhs1mw93dneTk5H7Hm81mdu7cOSRt2blzJ2azud+/n5ycjLu7OzabjW3b
      trFz5065JjDOSAEQYoTZbDaKior46KOPeOuttygoKABAo9GwYsWKft8C2tLSQkZGBs3NzcyY
      MeOq2jRjxgyam5vJyMjo90bcxcWFFStWoPls2OmCggLeeustPvroI4qKiuQW0XFgYE+bCCEG
      paOjg/LyckpLS6msrMRqtaLX69FoNNhsNvR6PStWrCC8H0Mr22w2srOzOXbsGFqtlhtuuAFF
      UTh69Oig2xceHo7BYGD79u28++67TJ8+nbS0NLRa7RXj0tPT2bFjB11dXWg0GqqrqyktLUWn
      0xEREUFMTAxRUVF4enoOun1ieEgBEGIYmM1mqqqqqKyspLKy0rFX7eXlxYQJE7BYLFRXV9PV
      1UVcXBwLFy684q2fdrud/Px8jhw5QkdHB3FxcVx33XV4eHhgNBqvus0RERHcdttt7Nu3j6ys
      LE6fPs3MmTNJSkpy7OX3JjIykttvv529e/dSUlKCXq8nPj4eV1dXKioqKC0tBcDX15eIiAgi
      IiIwGAwDvtNJDD0pAEIMAZvNRlVVFRUVFVRWVjouqLq4uBAWFkZycjIRERE0NTXx6aef0tra
      SkhICCtWrMBg6H3qxvMVFRWRlZVFa2srwcHBLF++vF9xA+Xh4cGqVauoqqri4MGD7N69m+PH
      jzN79mwSEhL6jHN3d3fEHTp0iOLiYnx8fJgzZw7+/v6OQlhQUMDp06cBCAwMJCIigsjISAwG
      wxWPNsTQkwIgxCB1d3dz9uxZiouLHad1NBoNoaGhzJ49G4PBQHBwMFqtlubmZjIzM6mpqSEw
      MJD09HSio6OvmKOlpYVdu3ZRU1NDQEBAv+OulsFgYMOGDZSVlXH48GF27NhBTk4OS5cuxde3
      78nfDQYD69evp6ysjKysLD755BNCQ0NZsmQJaWlp2Gw26urqHMUyJyeH7Oxsx+mi+Ph4YmNj
      BzwUhhgcKQBCDFBjYyPZ2dkUFxdjtVrx8vIiKSmJ6OhowsPDLxnIraioiF27duHi4sKSJUtI
      SkpC6cfMXefHLV68mIkTJ/YrbihFR0cTFRVFXl4ehw8f5p133mHp0qWXPRo4Py4/P59Dhw7x
      7rvvOuLCwsIICwtj+vTpWK1WjEYjZWVllJWVOa4dxMfHk5aWRkBAwAi9U+ckBUCIfurq6uLA
      gQPk5+fj4uJCYmIiiYmJhIWF9RlTUlLCjh07iIiIYPny5f0e4uH8uGXLluHh4TFUb2PAFEVh
      0qRJREdHs3PnTnbs2IFGoyEuLu6KcRMnTiQ6OppPPvmk1zidTkd0dLTjqKa6upqCggIKCwvJ
      z88nKSmJ+fPno9frh/U9OispAEL0Q1tbGx988AFtbW2kpqYyffr0K17E7OzsZNeuXRgMBtLT
      0/t9jttkMpGZmTnguOHm4eFBeno6H3zwAZmZmYSFhfWroLm7uzvidu3aRWhoaJ8FrefoYPbs
      2Rw7doxTp05RU1PDjTfeiLe391C/JacnzwEIcQU2m42PP/4Ys9nM2rVrmT9/fr/uYDl9+jRW
      q5UlS5YMaCN++vRpuru7Wbx48ZjZ+PfQarUsXryY7u5ux8Xc/sYtWbIEq9Xarzg3Nzfmz5/P
      2rVrMZvNfPzxx/JcwTCQAiDEFRQWFlJfX8+yZcsIDQ3td1xZWRkGgwEfH58B5SstLcVgMFz2
      Yuto8vX1xWAwOG7v7C8fHx8MBgNlZWX9jgkNDWXZsmXU19dTWFg40KaKK5ACIMQVFBQUEBAQ
      MKC7b+x2O42NjQMe2G2wcSMtJCSExsbGAc8INpi46OhoAgICHE9Mi6EjBUCIK6itre3XE7rn
      6+zsxG63D/i8tclkwm634+XlNaC4kebl5YXdbh/wPALe3t7Y7fYBTyQTHh5+1QPeiUtJARDi
      Mjo7O7FarQM+HdPd3Q0w4LtXeiZZH+tPyfa0b6CTwvf0R0//9Jevry9Wq1VmIBtiUgCEuIye
      uXIHOkNXT9xAH2jq2TCOtYu/F+t51mGgG/Ke/hjoHMQ9/X+1cx+LC0kBEOIyevZwL36460p6
      znEPdENutVqBgReOkdbTHz3t7a+e/hjotYOefAM94hCXJwVAiMvoufVwoAVADK2e/pdbQYeW
      FAAhhHBSUgCEEMJJSQEQQggnJQVACCGclBQAIfqg2u3Y65rQ17WgtrSjqmq/47qa2qDFRHeH
      uf9xqopq6kLb2QWW7gHlG0w77apKY5eNZtWV9m51+OPsKq0dFjosCiazddjziStT1D56U/fH
      vVi/vXCk2yPEmGAuNVL22HO0F1fQ3NaCv68f/gumE/WT+9F69v1MQJuxjmN/eIOm8mramprw
      CQggfEYyU79xOy7ufT8UZm1uo+6fH9JcaaTgdC6Jk5MJmjKJwA0r0Lj0fQfSYNtpbDXz7P4S
      yhvbaW1pxtfPjxmRgTw4LwZ3l75vXR1sXG1jO3/alYuxroXm1lb8fX1Jiw3hK0sm4qbv+5bX
      weYT/aN94oknnuhtwc8OlvHYvOGfeUiIscba3EbB1x/D2thC15kSXFo6oN0Eqkrbpzn437Cw
      14lZuto62ffDZ7HXN+N54AiB5VW4NLfS4e5B3clCIpfM6DXO3mWh6oV/Yq1vovntj3HLr4C6
      ZvRRoZiLK/Cc2vtEMINtZ2uXlUe35dJitlLSbKYDHabPbuc/Wd3GoriAIY3r6Ozil+8fp9XU
      zUmLlkZXT9pVDXqLhTPGJuYlhg1pPtF/cgpIiIvUvbEFtctC54k8sNlQALvJTMfR05jOFNNx
      Iq/XuOL3M7F3dePxyT70HZ1o7XbcGhrR79hLS1EF9Xm9j57ZuvcoqtVK9V/ewVrfjGKzYymp
      pOav72KpqqO7qn5I27kltwaLzU5efQc2FUDBbLVzqqad4sZOcuvahzRu28kKurttfNoJ3cq5
      TU47Gg632ymta6fY2DSk+UT/SQEQ4iKdpwpRP3vC1ebuSvWKNFRAtdpAUejM6X1Y4tbcs7i1
      t6O122kL8CN3w2KsOh2unxWD1jMlvcaZiyuwGOvAasMWHkTpXUuwu+iw1jejmi2YCnsvHINt
      Z0F9Bzb7uTO/rtiYptQAKjZVRfls+VDGFdW3Y9ZoQVHwsHYxz1KGYrdjQUHVKBTW974hH2w+
      0X9SAIS4iKLTOS40Kt1WPMrO2wO321H6OCev6HTYFAUVcDF34VlWi+azIQ/sKih9DO+g6LSO
      dbpZ7YQ2dqJRAQXQKCiufcUNrp06zbk2AthQqFM/n53LroKLpvfTKoON02o0KJ+1s1vRUosn
      6menblRVRTfE+UT/SQEQ4iI+S2ah0buCRoPGasenwIgCaH28QKPgPW9qr3HB81Ox+HjT7abH
      vdNE9JFcNHY7ZkMoqlZD0MxJvcZ5TpuEqyEYra8X1tpG3D/KAqsV9+QEFFcXPJLjh7SdsyP9
      cNVq0ChgQ0Ml3oCCl6sWRYGpht5HPh1s3Mwof9yxo1PtdGt1FOuDQFHw16poVEiN8BvSfKL/
      ZIATIS4SsGYJTVt2g0ZDV0U1XQ0tuIUH4+LvS8DapehjDL3GRS+bReUnn9K5chGWvGLsdfUo
      MZF0RxiIXjEbb0NQr3GeaRNpP3KKsAdup+3ACSxV9bhPisMjOR7P6cnnNuhD2M6l8YFkljSg
      UaCq1UyLqYsQL3d83V1YFh9EuE/vdysNNm7BJAP7CmuYo5go7bLRaLYS7q4jSKewcGIYIQG9
      v7/B5hP9J3cBCXERRavFb/V8bK3tmOqbaHZT8A4PI/y/biN0480omt4PnDVaDeELp2Fp76Sh
      s4s6Tz3uMZEk33U9ieuXofRxykLRKHimJWE3daH1dMdj8gT0kaH4LpuDz4Jpfd7pMth2ajUK
      C2L8ae+y0tRuQmNqIczfh9unRrIuJQxNH/kGG6fRaJgbH0J7VzftTa24tjdg8PNi/aw40mfE
      9vn+BptP9J88ByBEX1QVY6WRjM2bWXPzWsIjIvoZpmI0GsnYnMHatWv6HYeqnjvnraqgKP2/
      xXHQ7YRKo5GMLRmsXbOGiH7Oejb4uM/6JSODNWvWEhExvPnElckpICH6oiigUUCrOffvfoed
      23grGmVAcSgKSk/eEWnnuTAN5643D3+cct7P8OcTVyYXgYUQwklJARDiMmQCkrFFPo+hJQVA
      iMvomfN2oFM0yoBllzfQ/unp/4HOQSwuTwqAEP0w0CkhR3ry8oHOzTvaBto/MiXn8JACIMRl
      XO2G1c3NbYhacnk97dT0cevncOftr6vtj/FW6MY6KQBCXIbJZAIGfgqo51TFSI1W2bNh1OsH
      9nCU2Wwekrz91dMfAz2V09P/PZ+HGBpSAIS4jNbWVmDge649G6qR2iPvyTfQgmP/bKyiwRro
      Rdme/hjohryn/3s+DzE0pAAIcRlGoxFPT88Bn4NubGwEwN2970lZhlJPvsEWqsEaaHxPf/S0
      t790Oh2enp4YjcYBxYnLkwIgRB9KSkpoaWkhfIBPntpsNioqKtDr9bi6ug5T6z5nt9upqKjA
      1dV1wAXgaveoBxrv6uqKXq+noqJiwEcP4eHhtLS0UFLS+7DaYuCkAAjRi6qqKjIzMwGYNKn3
      UTz7kp2djdlsJiQkZDia1ms+k8k0qHzV1dVXlbuqqmrAMSEhIZjNZrKzswcU1/M5ZGZmDiqv
      uJQUACHO097ezt69e8nIyMBisZCUlITB0PuomhdTVZXs7GyysrIAiIuLG86mAuc2/ocPHwYg
      NjZ2QLFGo5GGhoaryt/U1ERFRcWAYnr6JSsri+zs7H4/E2AwGEhKSsJisZCRkcHevXtpb5dZ
      wa6G3FwrnJ7ZbKa0tJTi4mIqKiocG6SEhAQWLVrUr3UYjUY+/fRTxx61n58fiYmJw9bm3vIl
      JSX1O76jo4PMzEw0Gs1VXQjWaDTs3r2bdevW4enp2a+YxMREsrOzaW5u5uDBg5w9e5ZZs2b1
      61TbokWLsNlsFBUVcfr0ac6cOUNkZCTx8fHExMSM2G231wopAMLpdHZ2Ultbi9FopKqq6pK9
      YE9PT+bMmXPFDXhbWxuFhYUUFBTQ3NzseF2v17Nq1Sq0Wu2Qtru9vZ3CwkLy8/N7zdffC9VV
      VVXs3LmT7u5u5s+fz759+wbdpgULFpCVlcWmTZtYsWJFv46WtFotq1at4v3336erq4vq6moy
      MjIcRXPChAl4e3v3GbtixQqio6M5fPgwHR0dlJeXU15eDkBgYCAGg4Hw8HBCQkLw8PDodT3i
      HCkA4pqlqiqtra00NjbS0NBAXV0d9fX1fd65EhYWxsSJE5kwYUKvG2+bzUZtbS3l5eWUlZU5
      7mTx9fVFq9Vis9nw9fUlPT0dX9+rn62qr3w+Pj4X5Fu9ejX+/v5XXF9nZydZWVnk5eXh4+PD
      2rVrr/o5AD8/P9atW8dHH33E5s2bSUpKYs6cOVfc8Pr7+7N+/Xq2bt1KS0sLWq0WVVXJysoi
      KyuLgIAAoqOjiYqKIiQk5JLPIzExkfj4eAoLC8nLy3McCTU0NNDQ0EBOTg5w7q6joKAggoOD
      CQwMJCAgAB8fnxF7PmOsk/kAxDWhs7OTxsZGx09TUxONjY2XvdNEo9EQFhZGdHQ0cXFxl+x1
      qqpKfX09RqORyspKqqursVqtjriQkBBaW1spKyvDbreTlpbGjBkzBj1swfn5eo5Ozs8XGhpK
      c3Mz5eXl2O12pkyZwqxZs66Yr6urixMnTpCTk3NJ3Ofj868Z0N1OF8dZrVaOHDnCyZMn0Wg0
      pKSkMH369Cs+mGa1Wjl69CjZ2dloNBqio6Px8fGhtraW6upq7HY7Op2OsLAwIiIiCA8PJygo
      6JINeFtbGyUlJZSVlTni+qLVagkICMDf35+AgADHjzMeLcgRgBhXbDYbTU1N1NXV0dDQ4NjQ
      nz+2jLu7O66urr3u5fn7+zs2JOHh4ZfcptnW1uY4pVBdXe1Yr5+fH5MmTXKcWsjNzSU7O9tx
      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
    </thumbnail>
    <thumbnail height='384' name='Entropy vs. Class' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzd95Mk533n+feTmeVde+/HD0CYgSE8CRAEQAAkaCWtLnbvdNJpQ1Lc7kqK
      PRN3/8DGXuze7e3dSVxRe+TFikYiKZECSIKggfczmMF4193T3rvylZnP/ZDdDQynu9ph0DWV
      31fEMIiqp7Kzq6ueT+ZjldZaI4QQwleUUsrY7ZMQQgixOyQAhBDCpyQAhBDCpyQAhBDCpyQA
      hBDCp6z1nnBdjS0DhIQQomqtGwC21uRKzsd5LkIIIT5G0gQkhBA+JQEghBA+JQEghBA+JQEg
      hBA+JQEghBA+JQEghBA+JQEghBA+JQEghBA+JQEghBA+JQEghBA+JQEghBA+JQEghBA+JQEg
      hBA+JQEghBA+te5y0EKIyuI4DnNzs9i2TX19A4FAYLdPSdzgJACEqBBzc7NcOHeOsdFRgqEg
      XV097D94cLWin5me5htf/wsmJ8b5k3/5p+zdt3+Xz1jc6CQAhNhFruuytLjID/72ezz/0+fI
      pNM4joNSCtOy6Ont5f/4v/8SgEKxwGB/P8NDV8hms7t85qIaSAAIsUu01oyNjvKNr/8Fr770
      IpZl0d7ZSTwWx3Vd5uZmGRq8stunKaqYBIAQu6RYKPDyr3/Fay+/RCwe5/HPPcUXvvRlGpua
      cGybSxcvcOzdd7d0TMdxKBaLGIZBMBhEKVW2rG3bH1k5ceORABBil0xOTvCznz6Hbds8+tjj
      /O4//WckkkkALMvi8M2f4NBNN294nEKhwJlTJzl18n1mp2fI5bIYpklbewefvPde+vbsXa24
      XcdhaGiIt998g9GREYqFPJFojNa2Nm697Ta6enoJBAI4jsOVgQHefutNxsdGKRaKRGNR2to7
      uPX22+ns6saypPq40clfUIhdMjgwwNDgIJ1dXTz4qU8TTySuKbOZK+6zp0/zf/7v/47x0VEK
      hQJaawDCkQjvHXuX3/v9P+TQTTcBMDw8zL//t/+GyxcvkM1m0VqjlCIWi3PfAw/y3/zBH9DU
      3EL/5Uv8h3/3v9F/6TK53HI5wyAei/HQpx/hn/3+79PQ0PjRviHiYycBIMQuuTIwgNaant4+
      mltat928ks/ncB2Hx598mptuvpmaujqGh67wrb/+BsfeeZeenp/T29dHOBLhJ8/+mJMnjtPT
      18fjTz7Fvn37GRsd5e0336RUKmLbDq7r8tw//ojTJ0+yZ99+Hn/ySfr69jAyPMxbb7xOsVjE
      sZ2P+N0Qu0ECQIhdMjI8BEBNTS3RWHTbx/nErbfxH7/+DWKx2Opjd9x5F9NTU/zNt77J+NgY
      CwsLhCMRhq9cQSnFnXfdzdOff4ZwJMJtR+7gsc89SSadJhQOo12XkaFhlGFw73338+TTXyAU
      CnHbkTt44qmnSafTRCKRHf/+YvdJAAixS/TK/1Gr/7Mt0WiUfD7PmdOnmJ6cIpfLUiqVyKTT
      gHeHUCwWAOjq7uG1V17m7bfeJJ5I0LdnH13d3TS3NJNMpQCv07ezq4t33nqT1199hVAoRN/e
      vXR2ddHY1ExquZy48UkACLFLWtvaAVhYWCCXzRKPx7d1nKWlJb7113/FyRMnmJ6eIpfzmoTc
      5b4ArVlNm4cffZSzZ07z/vH3+NZ//mvq6+vp6Oxi/8FDPPLoZ+nt68MwDB757GNcvHCe0ydP
      MtB/mYbGRjo6uzhw6DCPPPpZurq7MQxZSeZGJwEgxC5p7+gA4MpAPzPT0zQ2NW35GI7j8IO/
      /S7P/uhH1NTW8uhjj7Nv/wHqGxsZGhzk3//bf3NV+d6+Pfzpv/4fOXvmFMePHuP4e8c4+s7b
      nHz/BFcG+vnv/uhP6OruZv+Bg/z5//A/c+b0Kd47dozjx47yzltv8v6J4wwNDvKHf/wntLa1
      fSTvg9g9EgBC7JJ9+w/Q2tbGQH8/b7z+Kp1dXcR+4y7ALpUwLWvdDuKJiXFef+UVLMviX/zp
      n3Hkrruxlstb5rVfb+26tHd00NrWxoOfehi7VOLtt97kL/+v/8ibr7/G4597ks6uLtCajq4u
      2jo6+NQjn6FYKPD6a6/yja//Ba+98hJPP/MMLa3b77gWlUHu4YTYJY1NTTz1hS9iBQJ8/7vf
      5Ud//0NGhoeYnZ1lemqKixfO89Pn/nF1WOdaioUCJbuERlMoFgEolYqMjY7w3tFrJ5H98oWf
      c/rUSZaWFrFMk0g0St+evbR3dOBqTb5QwLZtfvnCzzl7+jTppSUsyyIWj7Nnz15aW9twXZd8
      Pl/2vMSNQe4AhNgl4XCYBx56iIsXzvPGa6/y//7Vf+Lo22/R0NREqVTi8qWLTE9O8sRTn1+3
      vb2+voH6+gaGBgf5u+98m8GBfhzH4expr53/N/3gb79HOr3EbUfuoKOzk4AV4ML585x6/wSt
      ra20tLYCmu/9zX+haJe47fYjtHd0YBgm586c4dyZ07R1dNDc3CJ9AFVAAkCIXdTe0cnv/cEf
      0trWxisvvsixY0fRrgt4E7luve32ss0s8USCp77wBYauDHL61ElOnzpJIBhkz569PPPlr/C9
      b/8NhlKwfIyHHn6YXzz/M3723LNXXcG3trbx5a/9Nj29fRiGyYMPP8yvfvECP/nHH19Vrr2j
      k6/99j+hbbn/QtzYlF7nPq7ouORKMtlDiI/D0tISM9NTzMzMMDE+RsAK0NzSSlNzM80tLSil
      KBQKjAwNUSgW6OruWR33XywWuHThImfPnMZxbHp6+2hpbaWmppbBwQHi8TgtrW2EQiEy6TST
      k5OMj40yMT5ONpuhqbmF7u4e2js6iMZiaK2vKZfP52hubqG7p4e2jg4ike3PWxCVoSYSVBIA
      QlSIla+i67oopVav/DfT0aq1xnVd0BrDNMu+Tmt91T/DMK76eVstJ25MNZGgkiYgISrESsVq
      LlfgW33tZl+32UpcKvvqJ704QgjhUxIAQgjhUxIAQgjhUxIAQgjhUxIAQgjhUxIAFU5pd3k5
      RyE2Z2F+nvGxUW9YqBBlSABUOKU1CgkAsXnzc7OMDg/JWj1iQxIAQgjhUzITuMIZroNWCq0k
      q8XmrMzclYlcopyaSFBqFSGqTS6bZXFhfrdPQ9wAJACEqDJTkxNcvnhBOoHFhiQAhBDCpyQA
      hBDCpyQAhBDCpyQAhBDCpyQAhBDCpyQAhBDCpyQAhBDCp2QmcIWTmcBCiOtBZgILUYUy6TSz
      MzOyGJzYkASAEFVmemqSgcsXZSaw2JAEgBBC+JQEgBBC+JQEgBBC+JQEgBBC+JQEgBBC+JQE
      gBBC+JQEgBBVRraCFJslM4ErnMwEFkJcDzITWIgqlE4vMTM9JTOBxYYkAISoMjNTUwz2X5aZ
      wGJDEgBCCOFTEgBCCOFTEgBCCOFTEgBCCOFTEgBCCOFTEgBCCOFTEgBCVBnDMDBMc7dPQ9wA
      ZCZwhZOZwEKI60FmAgtRhZaWFpmenERrmQgmypMAEKLKzE5Pc2WwH9eVpSBEeRIAQgjhUxIA
      QgjhUxIAQgjhUxIAQgjhUxIAQgjhUxIAQgjhUxIAQlQZ0zSxLGu3T0PcAGQmcIWTmcBCiOtB
      ZgILUYUWFxeYnBhHy5aQYgMSAEJUmbmZGYavDOLKpvBiAxIAQgjhUxIAQgjhUzJUQNw4tEYD
      OA6stG8rBYYBhoFa+W8hPsRrCdO4GjTePwUYChTK1x8ZCQBR+bRGaw3FIu7iIu7oCO7MDLpU
      QkWiGM3NmM3NEI+jLEtCQABexa/RlBxIFzWjaZeFoqboQCqkaIspaiMGQQOU8mcQSACIiqdd
      F3dmBvvECeyzZ3DHxtCLi2jbRoVCqLo6zLY2rCN3YB04gIpGUDLAzde01jgaZnKaE5M2xycd
      BhddFoteICSDira4wW3NJrc3mzTHDALLQeAnEgCiomnXxRkbo/Cjf8A5dw69tPRB8w+gczn0
      /Dzu4CD2pUsE77uPwIMPYqRqfPdlFh9wNFyed3nuUom3x2wmspqSu9IcBArNuTmX96ccTkyZ
      PNkX4HCDQcj0VwhIACzTWlMqlZiZnuLShfP09O2ho7NrS8dwHIepiQnOnzvL4EA/sViMvfsO
      0Ld3L7F43FcfrB3T2qv8h4bIf/c7OOfPe23/63Ec9NgYhZ/+FL2UJvj4Yxh1dSiU75qETMsi
      EAzu9mnsCq3B1ZoLcw7fer/I0QmHrL1GObzriPGsZu6KzURG8zuHAtzRYhIy/dMcJAEAFAsF
      pqamOPX+CV5/+UVs2+apL35pSwHgOg4Xzp3l+eeeJZvNUFtXz8LcHKdPvs+Bg4d59IknqKmt
      kxDYJK017swMxed/hnPxYvnK/8MyGUpvvoGqrSX40EMQjeK3d7yjs2vLFy/VQqOZybl8/1yJ
      d8Yd8pv42BQcOD3t8IPzUBdRHKhVvvme+j4A0ktLHHv3bd596y3y+Tw9fXsY6L/sXTluQSaT
      4ec/fQ6Ap575EvsOHCSbSfP2G2/wzpuvU9/YwAOf+jTBYOh6/BrVRWsolbBPncI+cxZKpa29
      fHGR0jtvY+3bh9nX57s7gMWFeXLZHI3NzRiGf/pCtIaiA++MO7w9Zm+q8l9RdOHUlMPLQzbd
      SYOITzqF/fPpWMfs7AxnTp2kraODZ77yVT71mUcJBrZ++9x/6SLzs7Pc9cl7OHTTzYTDYWrr
      6rnn/gfo2bOXkyeOk15aug6/QfXRgLu0hHPhPHpxYRsH0LjDwzgD/Zu/c6gic7OzjAxfYZ1l
      vqqWRrNY0LwxarNQ2Prrsza8PuIwm9e+ee98HwD1DY08/cUv8+QXvsjBw4cJh8PbOs57x94l
      VVPL/kOHVldiVEqRSCbZs28/87NzTIxP+OaDtSOuizs+jjM8vP0KvFjEPn0Gnct+tOcmKpar
      YXjJZXjRxdnG10wDk1mXS3Mutk++pr5vAopGo0Sj0R21+WmtmZqYpLW9nbr6hqueMwyDltZW
      EskkszNT2zp+qVTCWSM4FIpgKITj2Nj2Gj1dK+WUIhgMYds2jlOunEEwGCxbLpvN8r/+6z/f
      +i+xBRq8HjrH+WDYxna8+xYcP3rd23P37j/Af/9nf45lBSgWi2i9/iJspmlhWdbmyxUKLE9/
      W5NlBTBNk0KhwPI7R6lUwrZtioUChmn8Rrl82d/FsgIYhkGxWP4SOhAIopTadLmj77zNX//l
      /1O27E5pvBAwXM3+HXxsvv0TxXcNrnvf0eNPPsXjTz29zrOKUCiE4zjY9vpNoDutA3wfAB9F
      5eA4DrlclkQ8sebxwuEIwVCIxYVFtNZXlVFlKgHwhqsN9l9mYXHxmucsy+KW2+9gZnqa4SuD
      6x4jGApx8y23MT05wejI8LrlIpEoh27+BBNjo0yMj61ZJp/PUywWy55zxVjuS7jeFubnGBsZ
      obO7h/5LF8ik0+uWbWlto62jk4vnz5LP5dYt19bRSUtrG+fPni77fnd299DY1MzZU+/jLN8t
      zc/Oks1mOWUcX+0D6O7dQ31DA6ffP1H2LrRv7z6SqRpOnThe9nfed+Ag4Uh0w3IHDt+EZVoM
      XL70sX1uFDurvB0XPo6Gw7HRkXXfP6UMbr/zLuZnZxkcuLzuMTZbB4RCIW665TamJicY+1Ad
      4PsA+CgU8nm0qwlHIms+HwgGsCyLTCZzzXOmdjb8sNbW1RGOxq553DBNAKKxGM0treu+fqVJ
      KhZPlC23MnQwnkyuWyZXptLyq2AwRCKZAqCuvoF4PLFu2XjCe66hoZFSmXCKxeJeuaZmnDJX
      dpFoFICm5hbcD82PMEyT5pbW1QCILH82m1pay95VhcJhlFJlPyfg/c6GYWxYLhAIYBgmtbV1
      Zcv5Ubnv48pFYjgaKfser9YB0c3VAfF4/KpyEgAfAXP5j+C6a183aNdFa41pmdc856hrH/sw
      Q7vUNzSW3RAmHk+UrXRWJJJJEmUq9xWpVA2pVM2az9l2if/2n//RhsfYEdfFGRig9OYb3sSv
      dUxqzRXgznXu4oymZoKPPoqKx6/TiXpSqRQ1tbUANDY1b+o1TRtUnCtaWts2Va61vWP1/680
      BbR1dK5+Nle0d3Ru6njtmxxGutlyt915J5HYtRcxHyXX1fQvuPxioMRkbv2Qi08exwkmydX0
      XvNc2FQ80WdxqN7ENK5vI1BHZ+eG718sFl+9GCgnnkisXlyUk0imVi9WQALgIxEKhda9wgdv
      nkGpVCSRuLby3Winr0rrNLasAPfe/8B1/RnacbBTKfJnzuKm135PAS6hyWmXO9Z5D82WFqL3
      3IuRSq35vPj41NXVX/fPjeNq2hZd3gjmWZpy1+05CeRmKEabWWq985rnghG474EIB+pMrOsc
      AJXA96OAPgrKMEikUszPzV1zW6+1ZmlpiVw2S02NLE+wacrwlmvc9uuXVwn14fttBQKEQiHf
      TYAzFDRFFUdaLCLbuLQNGHBrk0VnwsD0yZsnAfAR6e7t9Tpihq5c9bjjOAwPDVEoFGhs3lzz
      gOCDJZ+3W4ErBbbty20R2zs6uemW21bbh/1CKUXYUjzUabG31sDawkfHUNCRUHy2xyIa8M9M
      YAmALVpaXGRocJDZ2ZmrHr/19iPkcllOHn9vdRSI67qMjQxz9vRJevr2UFdX75sP1o5ZJgQC
      23+9UqhgEOWD2/jftDA/x9joyFWdwn5hKEVnQvGFvQG6U5sLAUNBa0zxeG+Aww0mpo++o77u
      A3Ach/HRUYaHh1YfW1yYJ5/PcfnihdWrz1AoRN+evSRTKS5fvMCrL7/IwcM388hnH1t9XXNL
      C4dv/gTHjx1Fa83e/QfIZjK8d/Rd0ktLPPiph4le506wqqEUKhJFRaPe32A7/SBKoWpqwPTf
      R3x+bo6Z6Smamlt2+1Q+dkpB0FTc025RdOHZSyUuzbnrLgsRMLwr/8d7AzzSbZEK+WMJiBX+
      +3Z8iOs4XDx/jl++8PzqY9p1yefznDxxnLNnTgPeMMza2lqSqRS5XJbx0VFa29qvOlYwGOLh
      Rx9Da827b73F8WNHcRyHcCjMI489zsHDN/lqXZYdUQqVTKI2MWKpHLOlZWd3EeKGpJQiEYRP
      dVq0xBS/GrR5Z9xhvuDtEWAqCJlghuD2ZotHeyxubjBIhQzf9Zv4OgCsQICHHvkMDz78yIZl
      V5puPnnfA9x97/3XNOUopairr+crv/1PePzJpxgbGSUSjdLa3n7V0hDi46N993UWKxSQCCpu
      b7Y4WGcyldWcmnEYS7tcmTXpag9w730RupIGUUthLV+b+e076usAWPljb+WP7m0dt3b5leeS
      qRqS64yjF5ugtbfj1xqzn7fCHR/3ZgL7dG18P1v5jloK4kFFNKBpTxg4Gn522aKl0fTG+vtk
      1c/1+DoARIXSGp3NotPp7a8F5Lq4c7NQZhat8AelwFSK5WWRCBhgGfhinP9GpFFaVCRdLKIL
      hR0FANmsL4eBCrFZEgCi8mjtXbnvdC3/Uumq/YOFEFeTABCiygSCQcKRiHSBiw1JH4CoPEqB
      Ze18DH8g4C0H4TNt7R20fWhxOCHW479vh7ghqGAQFQpufykIw/A2hPdhAMzPzTI6POTLmcBi
      a/z37RCVTylUNIpKJLYfAKaJUVfv3Un4zML8PONjoxW3kqyoPBIAovIohaqtxWhqgu0uaBYI
      YvZ0o2QOgBDrkgAQFUcBRjyOtf8Aqr5+63cBponZ04PZ3bP9ABHCByQAROVZ7gQ29+3DOngI
      wuEtvVbV1RE4cgSjocGX+wEIsVkSAKIiKaUwamsI3n8/1r79m1vUTSlUKkXgyB1Yn7gZJUMh
      hSjLfz1k4sagFJgWRnc3wSeeAENhnzsH+fzas4MNA1VTQ+Ceewnef/8HV/9yByDEuiQARMVS
      SkEggLlvH6FYDPPYMUrvHUPPzKBLJSiVUGhUPInR3k7ggfuxDh3CSKa8QJDKX4iyJABERVNK
      oSwL1dmJ0dxM4L77cIaGcMfHCFwZxFxcIvKFZzBaWjDicZRl+f6qPxgKEY3G/P42iE2QABCV
      b3mZbRUKoevrMVIp9MGDWGfPYhw/hrVnD1iWd8UvtR6tbe3XbFgkxFokAETl09qb1GTb6GwW
      d2oKd3YWp/8yenERZ3wco64OIhFv5q/PQ2BudoZsJkNre4fsQifKkgAQFU8vbxBjnz+PffJ9
      3LEx3HSaUiaN47rkv/NtzK5uAnfeidHRgQqFfN3+v7iwwMz0FC1yFyA2IAEgKpbWGrTGnZ6m
      +IsXKB07hp6b85aKXr4rcNE4Z87gXL6Mff4cwU8/TOD22yEWW206EkKsTQJAVCatvV29Jicp
      PPsspXfe9oaArlVOa8jncfv7KaTT6HSawP33YSSToPF9k5AQ65EGQlGRNKCXlii+/hr28ffW
      rvyveZFGT09Tev01nNNnoFBElkMTYn0SAKLyLHf4Ov392MePe3sDb5br4o6PUzp6FHd29vqd
      oxBVQAJAVBwN6Hwe+8IF3MnJre8LXCrhXLyIMzq6820lhahi0gcgtkRrTS6Xvb4/xNU4Y2MU
      hoewy2wMX0DjALk1nleZNPaFC4R6e1GRLSwmtw2mYRLayoJ1QlQICQCxJdlshn/1R/98t0/j
      Km/qNa7y81n4yT96/66zg4cP8+f/0/9y3X/OZoXCYWLxuIyAEhuSABBbYpkWd3/yk9f3h2jQ
      xQI6k/GGfG5XMIhKJq/7tpCVtv9uS2sbLa1tu30a4gYgASC2JBAM8uWvfPW6/gytNXphAWdo
      CLLbbG5SoGpqMXt7UIHruyuYVWG7js3OTJNJp2nv7JKZwKIs+XSIymRZO9zPV0EwCMp/H/Gl
      xUWmJidkT2CxIf99O8QNQQWDqEhkZ5vCx2IgV8BCrEu+HaLiqOUtIVU8DqHQdg7gLQURjcos
      YCHKkAAQlUkpVCKBSqW2vrF7MIhRW4vaTngI4SMSAKIiKUAFAhgNDahkYvNX8oEARl0dxnJw
      yPW/EOuTUUCiMinlVd7RKEZLKy4KvbhYfmZvMIjR0ODtBxwMeq+XJiAh1iUBICrXSgjE4xid
      nej5edy5OSgUloNAe6N8TBMiEYzGRoxEwus/WH69EGJ9EgCisq2EQDiMamrCqKvDzWYhn0e7
      DsoKoCIRVDgs20IuC4cjxBNJmQksNiQBICrfSgiYJhgGRiAAyeTVz0vFv6q5tZXm1tbdPg1x
      A5AAEDcW2eVrQzPTU2TSaTq6umUmsChLPh1CVJn00hLTU5MyE1hsSAJACCF8SgJACCF8SgJA
      CCF8SgJACCF8SgJACCF8SgJACCF8SgJAiCoTiURIplIyX0JsSCaCCVFlmlpaaWqRmcBiY3IH
      IESVmZ6aZODyJVzX3e1TERVOAkCIKpNJp5mdmZaZwGJDEgBCCOFTEgBCCOFTEgBCCOFTEgBC
      COFTMgxU3Fi09jo3V0a4LG8EIxvCCLF1EgCi4mmtvYq/VIJCAZ3JoLNZcB0IBFHRKCoahVAI
      ZZoSBkJskgSAqGxag+OgM2nc2Tn0wgKUSt7jaEChDQNCIYz6eqip8fYPBt+GQDQaxa6plZnA
      YkMSAKJyaY12XfTCAs7EOGSyHzT9fFAIHAeyWdxiEZXPYzQ2Qizm2xBobG6hsbllt09D3ACk
      E1hUpuW2fr20hDM+DunMGpX/b7Bt9Ows7tQkOp9fbTrym6nJCfovXZSZwGJDEgCiImlAFwq4
      09OQyWy+Incc9PwCen4e7Tj4r/qHbCbD3OyMzAQWG5IAEJVneZSPXlhALy5u/Sq+VMKdmYFc
      7vqcnxBVQgJAVBwNXnNOJgO2vb2DFArLI4WkGUSI9UgAiIqki0V0obD9NnzXlQAQYgMSAKIy
      OY73b9u0N1zUl70AQmyOBICoSB/FCB7pBBWiPAkAUZGUaYJp7uQIKMsC/DcPQIjNkolgojIF
      AqhgEK3U9u4ElEJFImD47xonGovhuo7MBBYbkgAQFUeBFwDh8PYDwDS99YF8GACNTc00NjXv
      9mmIG4D/vh2i8q0s5maa21/KYcdNSDeuqYkJLl04LzOBxYYkAETFWVnuWReL2+8Itm3Yyetv
      YNlshoX5OekEFxuSABAVSRcK6Hx+++P4HQc3nZZ5AEKUIQEgKpNtg13a2TF8egcgxGZJAIiK
      5DUD7aTy9paSlolgQqxPAkBUJGUYYOxkGKPyjiHzAIRYlwSAqEymCVZgZ8cIhXy5IYwQmyUB
      ICqOAlQotLNx/JaFEY/7ch6AEJslE8FE5VmeA6DicfT8/NbX9VcKFY9DJOLLO4BYPI7WWmYC
      iw1JAIjKpBRGPI6uqfHmA2xlZdBwGFVbiwoGr9/5VbCGxiYaGpt2+zTEDUDuj0VFUuA14zQ0
      oGpqNt+UEwxi1NdjJJPeXcT1PMkKNTk+zsXzZ2UmsNiQ3AGIyqSUV3mHwxhtbbiG4TUHldaZ
      G6CUV7axEaOuDoJB7/U+bAbJ5bIsLiz4fiaw9+trNOC4kLc1JQ1ZW5O3NQXbJWCo5Y+I8uNH
      RQJAVDClvHbsSASjowOdTKLn5rwZwrbtfcMNw1s4LhrFqK9HxWLe8E8/fpvFKq29ij9Xgoms
      y8C8y6lph/GMy8KQTWvJZq7Z5kCdQVvcIBrwmkP81m8iASAq3urqoHV1kEyi83lvu0jH8R4P
      hVChkNfks7KQnPA1DUznXN4dc3hp2ObMtEO6BI6G2rTL0JjDK8cK7K8zebDT5JOtFq1xAxN/
      dZ5LACwrlUpMTU4wMT6OUoqmZm9J3UBg82PRXddlfm6O8bEx0kuLJFMpmltaqamt9dWH6iO3
      0hykFAQCYFneKB80oK5+Xvie1pqZnOYnl2xeGCgxktaUPtQd4moouZAuwYlJh9G0y1ha89Se
      AN1JA9NHHyMJACCfz/Pqi7/m5InjLC0ugvKG0t1x193cc/+DBDcxmsS2bU4cO8pbb7zG3Ows
      xWKRUChEY1MTD3zqYfYdOIghY9J3bqVZSIg1aA05W/OrwRLPXioxkdVlVxSxNUxkNL8YsDEV
      fO1ggIaI6ZtrCd/XSMVigVdf+jUvv/grmlpa+Ke//wf87n/9ezQ2NfPL53/GGzDYIEAAACAA
      SURBVK+8vGFnmtaaC+fO8uMffp9AIMiXvvbb/Mm/+jMe+9xTzM3O8eMf/oBLF877vlNOiOtJ
      a3C05sKcy48vlhjPlK/8V18HzOY1LwzYvDvuUHK1b9YQ9PUdgNaaifFxTh4/zv6Dh3jmy18l
      GosB0NDQyA//9ru88tKvufOee4lGo+sex7FtfvLjH9He2cVXf+d3SdXUAFDf0EhdfT0/+N53
      eO/ou7R1dBCLxT+W300I/9Gki5oXBkqMpvWWlgFcCYGfXLa5s9WiLgzKB4OIfX0H4Louo8PD
      LC0tctuRO4h8qJJPplLceuQO7JLN2VMnyx5ndmaGTCbNwZtuXq38wRtR0NLWzsHDN3Ph3FkW
      52Vonrj+4okEDY1Nvmsqc5ebcy7MuRS3MQXC0TCw4HBlwfXNNhK+DoBSscjE+DgNjU3UNzRc
      84XZu28/wVCQK4MDZY+zsDAPQDKZvOa5UChEe2cnruMyPz/3kZ27EOupb2ikq6fXd31OroaR
      tMtCYfsXWXkb+hdcbJ9cp/m6CchxHDKZNIlkknDk2iaeWDxOJBr1OobLiMUTaK2Zm5u95jml
      FIlEgkgsysI2A2BkeIhMJnvN46Zl0rd3P/Nzs0xNTKz7+kAwQE/fXmZnppmZmlq3XDAcorun
      j+mpSeZmZtYtFw5YRGMx8vkcpWJx3XKWFSASjZLP5SiVypQLBIhEouSyWewym8AEAkHCkQjZ
      bAbHttcsY1oW0Whs8z8zl8Veb3LZJn+mBgolm6bmFoYGB8iXWbuotr6ehsYmBvsvUywU1i1X
      39hEXX09/Zculj2/xuYWamprvT2Al5fLSKeXyOfz1Nd/cFHT3NpGMpXiwrmzZTfJaW3vIBqL
      cen8uXXLALR3dhEMhei/eKFsuc7uHgzTZPDypbLlunv70FpzZaC/bLnePXsplUoMXxm85rmi
      VlyYjpLOJwCT7SwFXnJdLoxMc8FZJGx471PPnr3YdonhwWt/5of17dtPPp9jdGiobLm9Bw6S
      Ti8xPjKybhllKPbuP8jCwjyTY2Prltt8HRCkp2/PNXWAvwPAdcik09TW1a053FMpRTyWYGlp
      qeziWo1NTSQSSd5791369uylpbUNwzDQrovtOBSLRdAwPz9/zXFM10Zt0FpZLBTI5q4NAMvy
      /ny2ba/5/IqQEwK8oa7lyq20mpYrp4Cg6fWTuK6LU2aNHrV8Beq6TtlyxvLm7RsdzzS9+3LX
      Wb+cUis/s/yxDMPc8FhX/cwyx3Ncl9JyJV0o5Mu+x4mSd5eYz+fJ59cPitRyEObzOe/zs46V
      wMznstjL57cwP082kyESiaz+DRzHC69cLlu2GXLldyz3O4D3N0XrTZRzUYaxcTntbeCzUTmt
      NY7rrFmu5CoKxQDuDppZtYZisUQul8VdDgCtXdxNnpvrbFwOwLHX/h1WGMufY2eD7/ZqHVDa
      qA7w/q6/+d1Wep1PQ9FxyZW2sADXDWhhYZ7v/H/fpLm5lSee/jzhSOSaMt/8T3/JUnqJP/4X
      f7paUa3l/NkzfP+738Y0TQ4cPExdQwPp9BKjw8OMDA+RzWT4zGNP8JnHn7jq1tx0176qXKHQ
      OMpEq8q4nXddl7nJ8d0+jYpiBYOk6hp2+zRWDfZfZmZ6iluP3IlZ5jNbbYqO5tdXbL5xosBo
      ev0QqL/0LMVoM0utd17zXMSC378lyDP7goSt6u5DqYkEla/vAEzDJBqNUSjksde5vc9kM0Qj
      sbKVP8Ceffv54ld/i/ePv8f4+BhDQ1eIRqOkamqoqa3lzKmT1NTWXXMX4Rjl/wSGW90hLMRH
      xVDQFlckg4rRbW4FGjLx1WQwfweAaRKNxVlamKdYLACJq563bZtMJrOppXVN0+Tg4Zvo6e1j
      aWmRUqlENBojFotx7uwZzp4+TU1d7XX6TYQQpoLWmEFvyuDSvHvV7N/NMICOhEFPjYFZGTfc
      151Pfs21WZZFbW0tk5MTLC5c29E7MjxEIZ+noaFxU8dTShGJRmlqbqG9o5PaujpQitHh4eXO
      4GtHCQkhPiqKREjxYKdFbXjrl/CxIDzUaVETUr6YAwB+D4BAgM7ubhzHof/yxas627ylHY7h
      OA6fuO321ced5U7d32wycl33mvXXtdaMjY5w7sxpbrrlFlKplO/GZgvxcVEKAgbc2mTy2R6L
      1Bb2A4oF4P52iwc6LIKmf5aG9nUTkFKKltY29h84yKsvvUgymaJ3z160djl7+hTvHz/GgUOH
      aWz6oAlo4PIlTp44QXdvL7cduWP18dGREZYWF2hobCQUCuO4DrPT07zws59g2yU+ccuta3Yy
      CyE+Okop4kH4/N4ABQdeGrKZyWmcdboEDCAVgrtbLb60P0Br3MDwS+2PzwMAvFmTd997P4uL
      izz343+gvaMTx3GYnBinrb2Dhx/97FXlJyfGefetN3Bd56oAmJqc4Lkf/T119Q2kamooFYuM
      j40Sjcb4zOOfo7OrW67+xccikUxiGIZvP2+GUrTEDL68P0B9WPHKsE3/gkveBne1jHe30JVQ
      3NNu8XCXRW+N6ZvO3xW+Hga6QmvNxNgY/ZcvMT42imEYNDY3s2//AeobGq8atjkxPsaVwUEa
      Ghrp3bNn9fGF+XkunDvL5MQE6aUlAoEATS0tdHR20dHVte3heIbroJWSYaAVrNKGgQrvO110
      NIOLLj+5XOKlKw6zee9OoP7Ss9jxZuyOO7mv3eQL+4LsrzUIW/5aadb3w0BXeGv2tNHU0kI+
      l0MpRTAUWrPSbm5ppbml9ZrHUzU1HLnrbq9/oFTCMAxC4bCvxmGLyjA+NsrC/Bz7Dhzy3XIQ
      KxwNVxa9xd3eHHWYL+jV5R003rIRWRuOT7ooVeKpPQEO1RuETH/tCiYB8CGGYayuBrrd14fD
      YQiHP8KzEmJrCvk8mXTalwsPau3NKr445/Ctk0WOjjtkba6ZFeCVg4ms5sUrNpMZze8cDnCk
      2STko05gf14eCCGqkkYzk3P5/rkSb485ZNao/H9T3oFT0w4/OFdiYMH1VXBKAAghqoLWUHTg
      3XGHt8Zs8lvowiy6cHLK4eUhh7zjnw1hJACEEFVBo1ksaF4ftVlYf6HVdWVteG3EZjavfXMX
      IAEghKgKrobhJZfhRXfdcf/laGAy63JpbnuvvxFJAAghqoKrYSzjsrj+6tkbKjgwuOifDWEk
      AIQQVcHVsFTU5Hdw+W67MJff3Gby1UCGgQpRZZKpFKZl+Wo8O3hNOEUHnB3s56uBgs1yH0D1
      v38SAEJUmdq6emrr6nf7ND52WnuV/44u3jU42j93ANIEJESVGRsd4eypk962jT6iAMvw1vnZ
      yUF2fIwbiASAEFWmWCiQzWZ8M5Z9haEgbCl2spOjAUQDyjcrgkoACCGqglJQE1JEdpAAARMa
      IkruAIQQ4kZiLu8JnNrGbmArwib0pvyzLLQEgBCiKhgKWuMGfTUGgW3UbAbQmTToTsmewEII
      cYNRxIOKhzot6rZxFxAPwqe7ArInsBBC3GhW9gS+pdHk6b0B6sKbr8aTQXi4K8ADHSZBE98s
      By3zAIQQVUMpRTQAj/daZEuaX1+xmcrqdZd2MJc7ju9pN/n8XovGqL+20pQAEKLKpGpqCAQC
      vqrIPsxQiqaowTP7AjREFa8OO1ya8zaGcbXXV2AZELGgN2VwT5vFg50W3UnDN52/KyQAhKgy
      NbV11NTW7fZp7CpDQUvM4PHeAIfqTC7MuZybdZjKabJjBg2NJvtvCnJTg0FvyiQZUpjKX9tB
      ggSAEFVndGSY+blZDh66CcOne1IrpTDw2vYPN5jsqTW4r90i72hemrRoa7X45L4AkYBavur3
      zzaQHyYBIESVKRWL5HO5na2JUwXUcsVu4DX3RCzvv+vCilTIGzHk14p/hQSAEKKqrQTBtY/7
      uOZfJsNAhRDCpyQAhBDCpyQAhBDCpyQAhBDCpyQAhBDCp2QUkBBVpqa2lmAoJKNcxIYkAISo
      MqmaWlI1tbt9GuIGIE1A4saiNXqNf77b/7CMkeEhTp04juv4a09gsXVyByAqn9YfzGp1XbTj
      gG17lb5hoCwLvbzkgTfnx99NH3apRKGQ9/1MYLExCQBR8TSA46ALBXQmg85mIZ9Huy7KslCR
      CESjqFgMgkEJASE2SQJAVDatwbZx5+fRs7PoTOaDq39AK4VeWIBAAJVKYdTXQyyGMgwJASE2
      IAEgKpfWaMfBnZnBnZiAQuHatv6V9v9CAT09jVssYjQ3QSIpISDEBiQAREXSWoPr4s7Pe5V/
      Pr/xi1wXvbiICximBbEYIIt+CbEeCQBRsXQ2izs1tbnKf8VKCIRCGMEgKhi8ficoxA1OhoGK
      yqO11+m7tATZ7NZf77pev8BWgkMIH5I7AFFxNKBLJW+0z3bHsheL6EwGFY+Dz3bFqq2rIxwO
      S9OX2JAEgKhMpRJ6rU7fzdIancuB6/ouAJKpGpKpmt0+DXEDkCYgUZG044C7k5msGl0qgQ+n
      Q40MXeH948dwZCaw2IAEgKhMH0XzhU9bQGzbplQs7vZpiBuABICoSMo0wdxJC6VCBYL4NgWE
      2AQJAFGRVCDgDeHc7p2AUt4SEYZ8xIVYj3w7RMVR4C3tEIttvwM3FPJeLwEgxLrk2yEqj1Le
      Kp/JJMTjW78LME1UbS2Ew9fn/ISoEhIAoiIpQIXDGI2NEIls/oWm4S0KV1fnrRR63c5QiBuf
      BICoTEqhDAMjmcRoaYZodOM7AdNEpWowmppQKxOhZDKUEOuSiWCicimFMk2M2jowLW856KWl
      Dy0HrYHlSj4YRNXWelf+kYivVwKtra8nEo1i+PT3F5snASAqm1JgmhipFDoSgVwON5OBXM7b
      ECYQ8Cr8aNTbFMayfH/ln0ymSCZTu30a4gYgASAqngK0YaDCYQiFMJNJb6YwGpThXe3LlpCr
      hq8MMjszzU233Ibps2UwxNZIAIjKp9QHnbkrI4Qs+eiux3EcbNve7dMQNwDpBBZCCJ+SABBC
      CJ+SABBCCJ+SABBCCJ+SABBCCJ+SABBCCJ+SsXRCVJm6hgZisTiG4e/5EGJjEgBCVJlEIkki
      kdzt0xA3AGkCEqLKDA0OcPzoO7InsNiQBIAQVcZ1Xan8xaZIAAghhE9JAAghhE9JAAghhE9J
      AAghhE9JAAghhE9JAAghhE/JRDAhqkx9QyPxRALDkOs7UZ4EgLixaI3WGlzX++/l/X/9vg/w
      h8UTCeKJxG6fRsXQGlytKTlgayi4UHLBdjSmoXz9sZEAEBVPa+1V/LYN+Tw6k0HncuA4EAig
      YjFvU/hQCGUYvg+DKwP9zExPccvtd/h2T2CtNRooOjCbcxla1JycdhjLuEwPlWh3bPJDNntr
      DRqiBmHL209a+exzIwEgKtvy1b5Op3FnZ9ELC1AqeY+jAYU2DAiFMOrrobbWCwLwbQjolbsk
      H9PAXF5zYtLhxSGbE5MOS0WNo6Fm0WXAtfk1eQ7Xm3y62+JIs0lj1MBE+yoEJABE5dIa7bro
      +XmciXHIZD9o+vmgkHcnkM3iFouofB6jsRFiMV+HgJ9prZnLa37eX+L5fpvBRZfihz42rvbu
      DJaK8M64w/CSy8iSxRN9AdrjBqaPPjISAKIyLV/F6qUlr/JPZ5av+suwbfTsLC5gmCaEwxIC
      PqM15B3Ny0M2P7pYYjTtXfWvx9Ywmtb8rN/GUIov7reoD5u++cjIMAFRkTSgCwXc6enNVf4r
      HAc9P+/9cxz83RDiP47WDC64/PhiiZGl8pX/CheYymp+PlDi/SkX2/XPp0YCQFSelXb/hQX0
      4uLmK/8VpRLuzAzk89fn/ERF0lqTLWmv2WfB5TcbC8u+FpjIaJ69WGKp6J8+FAkAUXE0eM05
      mQzY9vYOUih4r7+mz0BUK1d7lfjZGYfCNv7sjoaLcw5DS+6m7hyqgQSAqEi6WEQXClu/+l/h
      uujsWp3Golq5GoaXXOYL26+9czZcnndxfPKxkU5gUZkcx/u3bdobLurDXoCGxiYSyZTvZgK7
      wHxBk9/B5bujYTrrnzsACQBRkVYmf+34GD4Ui8eJxeO7fRofPw2O690J7OAQ2D65+gdpAhIV
      Spkm7GgWq0JZFt78Tn8Z7L/M0bff9N22kEpBIgjBHQzkNxXUhBWGTz42EgCiMgUCqGBw+2P4
      lUJFIuCzZhA/MxS0xgySge3X3iETupL+mQwmTUDL7FKJmelppqYmUUrR0NhIXX0DgUBg08fQ
      WpNJp5memiSdTmNZFqmaWhoaG7d0HL9T4AVAJOIt/bCdK9nlNYIkAPzDUNCWMOhOGVyad7G3
      2BRkAC0xg74aA9MnHxsJAKCQz/PGa69y8sRxFubnUEqRSCY5cufd3PXJewgEgxsew3Eczp0+
      zdtvvs7M9DT5fB7TNInFYnT39nHvAw9Q39Doq3VGtk0pMAxUMgkLC5BOb+31K68Nh6/P+YmK
      pFAkgnB/h8XRCZvp3NZeHw3Ag50WNWGF8knToe8DoFQq8ebrr/HrX/yc7t4+PvvE53Ach9df
      eZmf/+Q5DMPgk/fdv2HFPXRlkB/+3fcIh8Pcdc+9dPX0UMjnef+99zj2ztuk00s8/cyXiCcS
      EgKboRQqGsWor8ctFJZH9GzudUSjGHV1KLnr8hWlIGDCbU0mD3QEeL6/RHaT00hCJhxpNnmg
      wyTkoyWifR0AWmsmxsd47+g77Nm7jy997bdXR0+0tXfwg+99h1+98Dy33XEH4XCk7LFefelF
      wuEwX/vd/4qu7p7Vx/v27qO+sZFfPv9T7rrnXlmnfZOUUmCa3gqfroM7MQnF4kYvgngcs6UZ
      lUigDEPWAfIZQylqwvBbBwM4rubVEYf5vF53VrAC4gG4o8Xitw4F6EyYGH7pAcbnncCu6zI6
      PMzC/Dy333kX0Vhs9blUTQ23HjlCsVjk7KlTGx5rdmaGRDJJW3vHVY8HAgFaWluJxePMz819
      5L9DVVPeSB6joRGjtRUSCbCsayt1pbw2/7o6zLY2VDIllb+PGUrRGjf42qEgX9hrsb/OIBYA
      S3n9BApvtE/IhO6k4vG+AL9zOMD+OhPLZzWir+8ASqUiE+PjNDQ2rtk+v2//QYLBEIMD/dx2
      x51lj9Xc0sLo8DDTU1O0tLauPm7bNrMzM9i2TV1d3XX5ParacuVuNDSgolF0Oo3OZtHFIrgO
      yrS8VT+jUVQyiQqFfL8hjPAq+K6EwRf3BznU4HB62uXyvMNcXlMaUaTqDLr2BvhEo8nhBpP6
      sMIyZEMYX3Ech3R6iWSqhkj02iaeeCJBNBplaWFxw2Pdfc99/N13/oaf//Q57nvgQTo6u8jn
      85w+9T5vvfEa+w4cpKm5ZVsfsLHRETLZa3u0TNOkp28PC/NzTE9Nrfv6QCBAV08vc7OzzM5M
      r1suFArR0dXNzPQ083Oz65czDSLRKIV8nlJp/WYZ07KIRKLk8znsMm34lhUgHImQz+Ww7TLl
      AgFCTU3klhZx8gXQLhgmBCxvzH+phKk1kehH+zPD4Qi5XBZnnXWJNIqS49LQ2MTI0BXyZRah
      q62ro66+gaErAxQL67939Q0N1NTWMThwGbu0fkN2Q2MTqZoaBi5fxFlevyCXzQDQf+ni6uet
      qbmFRDLJ5YsXyk6Qa2ltIxKN0n/p4rplwGsiDQaDDPRfLluuvbML0zS4MjBQtlxndw9auwxf
      uVK2XHdvH6VSkdHh4bLlevfsJZ/LMTc6Qp2rucOC3jikQ3AuvEhjOMAT+yARcBgf7idT5mvZ
      1dOLY9uMDA+V/Zk9fXso5POMjY6ULde3dx+ZTJqJsbF1yyil6Nu7j8XFBaYmJtYtt/U6YIbZ
      mZnVx30eAC7ZTIaa2to1h2kqpYjF4yylF9G6/E5Bnd3dfOHLX+EXz/+M//LN/0woFMJ1XbTW
      3HTLrTzw0KfXnJ1pujZqg+UKspkMi4vXhpBleX++YrHI4sL8uq8PhkIAFAr5suUikahXLp9b
      t5wCzKTXj+E4DqVNdM46dvlyK++rbdvlyxkGygzjmBZ2SK9sCLb8QxzAQauV/9zg3FZ+prPx
      z/R+h/XL2Y6LlfMCOpNJkykzaikS9d7j9NIS+dz6w1Tice89Ti8uUizT95FMpQBYXFjEcbyg
      WKnglxYXVsvVLt99Li7Mlw2A+oZGIsvlymlqbsEKBDYs19LWhsLasJzrOriuu4lyLo7tbFhO
      a41dKrG0XE4DtRpqTJgwC8R0lpqAF5hLixscy3VxHHtzP9PeuBx4w87LlVtZxqO0wXfbsrx6
      q1AolC0XWq0Dri6n9DqfhqLjkitV90zChYV5vv2tb9LS2soTT39+zY7eb/7V11laXOSP/+Wf
      epuMrCObyfD6qy/z3rvvEolGaGpuoZDPMz42RiKZ5FOPfIa9+/ZjWldn7mYCwFEmWlVG46Tr
      usxNju/2aVQUKxgkVdew26exarD/MjPTU9x65E7f7glczj/+/Q9pbmnhrnvu3e1T2VU1kaDy
      9R2AaZhEYzEK+YJ3m73GsPFMJk0kGi1b+QO8+dqrvP3G6zzwqYc5styh7Louk+Pj/OqF5/nZ
      c88S+WqUzq7uq+4kHKP8n8BwqzuEhRC7pzIuK3eJsTxRK5fLrnmbbds22UyGRCJZ9jiFfJ63
      3nidvj37uOuee1dHExmGQXNrK/c88CCOXeLMyZO+XaBMCFF5fB0AlmVRU1vL1OTEVe2lK0ZH
      hsnn89Q31Jc9zszMDIVCnoamptW2thVKKerq6kkkU4yNlO+4EkKIj5OvAyAQCNDR2UWpWGLo
      yuBVo0Zc1+XU+yewbZubbrn1qscdx+uwWhGPx0HD7PQ0juNcdZWvtWZxYZ5sJiOTwIQQFcXX
      fQBKKVrb2tl74AC//sULJFM19PT2obXL2dOnee+dd9i3/wAtrW2rrxnsv8zpkyfp6unhE7fe
      BngjMfYfOsSZ0ydp+HUjN99yG+Fw2OswnZvlpV/9kvm5OT77uSd9N85YCFG5fB0AAIlkkrvv
      vY/F+Xl+9IO/o6u7B8dxGBsZobG5mUcee/yq8uNjo7z52isUi4XVAAB47HNPUcjnee2llzh5
      4jiNjU0Ui0XGx0ZBKT796KP07tkjASCEqBi+DwClFN09vTzx+We4dP4cE+NjGIZJ70N7OXj4
      ME3NLVeV7+7t4/Gnnr7m8dq6Or741a9x8fx5piYnWFxcJJ5IcGfXPXR0dtPV03NN/4AQQuwm
      3wcAeCHQ0dlJa1sb2WwGQxmEI5E1x1C3tXdcs97PyjFSNbUcuetu7FKJQqGAYZqEQiEZiy0+
      Vk3NLdTU1vluT2CxdRIAH2Ka5oZDPjeilCIQDG5qDwEhrodQOLw6+1uIcuQSQYgqMzQ4wPGj
      71w1Uk2ItUgACCGET0kACCGET0kACCGET0kACCGET0kACCGET0kACCGET0kACCGET8lEMCGq
      THNLK3X19TITWGxIAkCIKhMIBq/ZelSItcglghBVZvjKIO+/d1RmAi/T2tuXw3E1tqtxAVeD
      qzV+36BPLhOEEFVHa42rIV3SDC26jCy5pIsaW8PlKYchbTN5qUR73KA7ZZAKKUyF75ZrlwAQ
      QlQdV8NI2uXFKzavj9gMLLjkHO9uoHbMxl6yyRcKdCYM7mozebjLoq/GJGBoX4WABIAQoqq4
      WjOecfn+uRIvD9nM5jXOh5p6NOC4kHfg0rzLVM5lKqv5ygE4UGdi+af+lz4AIUT10FqzVNT8
      w4USLwyUmMpdXfn/JheYL8CrwzY/OFdiNO3i+qhjQAJACFEVtIaSC8cnHH4xYLNY3Pxrsza8
      PmLzyrBN0fFP57AEgBCiKmg0SwXNy8M2c4Wt1+CZErx0xWa+oNH4IwGkD0CIKlPX0EAsFscw
      fNSYjdfxO5p2GVhwKW1jBKyL13HcP+9SHzYwfLCTq9wBCFFlEokkDU1NKOWvr7erYTSjWdjG
      1f+Kgg2DC27ZfoNq4q9PiBA+MDQ4wHtH38FxnN0+lY+V1rBQ0OTs7dfeJZcNO46riQSAEFXG
      dV1cn1X+4DXh5O2dVd7eMbzRRH4gASCEqApae+P73Z3U3RpsV0YBCSHEDUUBprHDSk15x8An
      /ecSAEKIqqAUBE3YySrYCgibCsMny0FIAAghqoKhIBVURMztV94BA+oi3sJwfiABIISoCoaC
      1rhBMrT9Y4RM6EkaEgBCCHEjMRS0Jwy6kttb0E0BLXGDvlrD6wfwAZ/8mkL4R31jI929fb7b
      ElKhSAYV93VY1GzjLiAWgPs7LGrDCuWTXmB/fUKE8IF4PEF9Q6Ov1rUHrxM4YMKRZpN72y0i
      W1jKIWjArU0mD3SYhAyFX946CQAhqsyVgX6OvfOW72YCg3cXUBtWfHFfkEP1m2vLN4CelMHn
      9wboThq+Ck4JACGqjNbaNzNZ1+K4mumcS6bEptb01EDO1szkNEWfZaYEgBCiani7gWl+dLFE
      /4K7qVnBGhhLa35yucSFOdkQRgghbjhaQ9GBN0Yd3p9yKG5hSWhbw8U5l18N2uRsWQpCCCFu
      KBrNfN7lnTGbdGnrr8878M64zXRO++YuQAJACFEVHBf6F9zlfX23d4y5vObMtIO9jQ1lbkQS
      AEKIquAC0zlN1t7+MWwN4xmNT+p/CQAhRJVY7gNwdtB842pvTwGftADJnsBCVJuGxiYSyZTv
      ZgKzvBqoqRSbGwB6LUNB2PLLPGAJACGqTiweJxaP7/ZpfOwMoD6iiO6gVrMUNMcUhk8SwGeX
      CEJUv8H+yxx9+03fzQQ2DehNGbTGjW1XbDVhxeEGE8snNaNPfk0hRLVbWQbizhaTeHDrrw+b
      cGeLRcP/39698zYRRGEY/s7MrLNrm/gm3+TEIIUAEhRQoEABiBoJOgp+MAUoURBCSoNIwq0B
      iQZBEWwKQxkMaZDnvM8v2GbnHWn3zFRcCAMAK2VxI5jp1iTpWj+q9g+rWzJpqxN0f5pUJQ6D
      A4CVE8w0bpgebRe63A1/FYFk0vlW0IOtQtvd4Gb3LxEAABkxk1IwXR9Ey0z0sAAAAYJJREFU
      Pbla041hVCOdfsd7GaVL3aDHVwrd2UhqFH52/xJ/AQHIjJmpStLOOGq6HvT0/Ymeffihj19n
      +n4yV5lM65W02Qu6OU66N02anjPVork6CloiAAAyZGZKwTRpzvXwYqG7G0mvv8z06dtcB5+j
      NieFbu+UGjVNZVx89HW29ksiAAAyZbYYCqvMVDbn6teDZnPJXkWNOlEXWsHtwv8bAQAy0x8M
      1Wq3/U0Cn8Js8Yto+HVFZDIpmhS9THv9AQEAMlPV6yqr6n8/BlYAWwQgM8eHb7S/+1yzmZcz
      LXFWBAAAnCIAAOAUAQAApwgAADhFAADAKQIAAE4RAABwikEwIDOD4UjtTpdJYCxFAIDMrJWl
      amtnuBIL7rBFADLz9uhQL/Z2mQTGUgQAAJwiAADgFAEAAKcIAAA4RQAAwCkCAABOEQAAcIpB
      MCAzw9FY3V6PSWAsRQCAzBS1mmLi1cZybBGAzLw7PtLL/T0mgbEUAQAApwgAADhFAADAKQIA
      AE79BHmmUyVw9T9YAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='188' name='Total Class Counts' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAC8CAYAAABxCHndAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAaFklEQVR4nO3de1xVVcLG8d/hDiqKGqIgICjeLTUvo1amjlkajk1WmjWa2MVp8i2zq+Wr
      XXUmry/K2JjTOEkXL9mrNq+FcTEq72mClxQFJTkgIuDhiMB5/yCPnLgIih5rP9+/ztl7r7XX
      4WPr2XuttXcmm81mQ0REDMfF2Q0QERHnUACIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBE
      RAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQCgAR
      EYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBE
      xKAUACIiBqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABAR
      MSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAERE
      DEoBICJiUAoAERGDUgCIiBiUAkBExKAUACIiBqUAEBExKAWAiIhBKQBERAzK7Uor2L59e320
      Q0RErrErDgARI8ttGuHsJohcNpPNZrM5uxEiv1abjuQ7uwkil01zACIiBqUAEBExKAWAiIhB
      KQBERAxKASAiYlAKABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQ
      CgAREYNSAIiIGJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDcnN2A34t
      iouLSU1NBSAwMJDmzZs7uUUiIlfGaQGwbds2CgsLHbZ5e3sTFhaGv7//JcvHxcWxdu1aAIYN
      G8aIESOuSjsvyMnJYeLEiQBMmzaN+++//6qeT0R+XUpKzhO39kPKSsu484E/XVFdpaUl7E5O
      JGXndxzcsxN3T08CgkLoMWAQPfoPxMXVtcby6T8eIGHDGgb/4X5ahYRVeUzqrq3OC4B58+Zx
      8ODBKvf5+vrSoUMHnnzySTp16lTlMZmZmXz77bcAdOnS5aq1U0SkJrayMuLXr+b9eW/wU3oa
      gaHhVxQAhWfyeP3Jh9mVnACAycUFW1kZAKuX/Q8DhkXySvSKKsuaM4+zYsFbfLk2lrLSUoLa
      tK02AGIXv3N9DgHl5+ezdetWJkyYwPjx44mKisLd3d3hGFdXV/s2Hx8fZzRTRAxu61f/x3t/
      m0na/n2YTKZ6qXPKHwdzPO1H+g+9m1ETnqD9jT0pLSnh6MEUvli9krMF+ZXKnMnNIXbxO6z/
      YBnni8/V6jxjJk91fgA0a9aMJUuWAJCdnc2hQ4dITk5m69atlJaWsmzZMoqLi5kyZYpDubFj
      xzJ27FhnNFlEhCWznufT92MA6Dv4TsY/8wrTH7n3ioPgeNqPRD40icmvzsHk8vM6HU/o2L03
      Hbv3rnS8+UQGj97Zl6KzhTRpdgMPTJ6Kq6sb0f/9LNTQlo7dezt/FZCnpydhYWGEhYXRp08f
      xo0bx+LFi3nppZfw8PAAIDY2lmPHjl1W/TabjWPHjrFz585Kcw6XUlhYWOcyImIMudknubHv
      Lcxf9SUzl35Imw6dr7jOvFPZtAgK5olXZl/s/C/BWnQWV1dXxj/zCu/H72HU+Cdw/7nvvBSn
      3wFU55577iEvL4/FixdTUlLCggULmDt3rn1/SkoK06dPB+Dll1+mZ8+eDuVLSkpYuHAhn332
      mb0TN5lMtG3blpkzZxIREVHleS0WC9HR0SQlJZGZmQlA06ZNNc8gIg6eeGU2Tf0D6rXODSvf
      4w9/evySk7wVBbQO5f2EvTT0bVzn8zn9DqAmDz74oH1F0I4dOxz2FRYWkp6eTnp6Ovn5jmNi
      RUVFTJo0iZUrV9o7fxcXF2w2G4cOHWLixIls27at0vkyMjIYM2YMH330kb3zB8jNzSUxMbG+
      f56I/IrVd+cPcPRgCkPuGVOnMh6eXpfV+cN1fAcA5cNDvXr1YsOGDZw9e5ZTp07RrFmzS5aL
      jY1l7969AAwfPpwnn3ySxo0bk5SUxIwZMygqKmL+/Pl88MEHDuXmzJnDiRMnAGjdujVjxowh
      ICAAq9VKfHw8mzZtqv8fKSLys5MZx/Bt0pTT2Vkc2vc9Rw+kkHMyk1ahYbTt1I0uvfrV6/mu
      6wAACA4Otn8+evToJQPAYrGwYkX5Eqnw8HBmzpxp3zd48GDS09OJjo7mwIEDbN26ld69yydV
      kpOT+eabbwDo1q0b0dHReHt728t26dJFASAiV9XJjGO88PBIdn+TaF/6WVGPAbfzX28spEVQ
      cBWl6+66DwCr1Wr/3KBBg0sen5CQQEFBAQB33XUXu3btcth/44034uHhQXFxMZs2bbIHwOrV
      qwHw8/Pjvffeq6/mi4jUis1m45y1iBkxK/H2qdzXFZ+z8vTooTx8W1f+MmsuIx6ceMXnvO4D
      oOLqn4p3A9XJysqyf160aFGNx5rNZvvnjIwMAIKCguraRBGRK2YymfAPbF1l5w/lY/1PvDqb
      qfcPI3XXtt9+AGRlZbFlyxYA/P39a/XAV8UhooiIiBqHjCquBPL09ATKJ5BFRJwhICgES2EB
      Pg0bVbm/fbceAGQcqfotCnV1XQdAdHQ0xcXFALV+10/FK/hBgwYRFRVVq3ItW7YkNTWVzMxM
      iouL7c8giIhcK0Ft2vLlmlgiH360yv1WiwWApje0qJfzXZfLQM+cOcPUqVPZuHEjUH71P2HC
      hFqVDQ0Nxc2tPNfWrFlDSUlJlccVFRWRlpZm/34hOCwWi30+oKLS0tI6/QYRkboaPvYRPn0/
      psoJYIDd35QvRw9tX/U70urK6XcABQUFxMSUP0595swZDhw4wKFDh+xDMa6urjz77LMOK3Jq
      4ufnx3333cfKlSsxm81MmDCBKVOm0L59e0wmE2lpaSQnJ/Pxxx8TGRlpf8XEqFGj+Pe//01Z
      WRkLFizg/PnzDB48GJPJRHx8fKUloyIil8NqsfD5R//Ew8ub4WMcL2xbh0dw4uhh3n46iml/
      i8HN/eJIxOkcM+++PR1XVzduvXNUvbTlugiAf/zjH1XuCwsLY+bMmXTs2LFOdUZFRZGUlERG
      Rgapqak8/vjjlyzTunVrRo4cydq1a+1PES9cuLBO5xURYzhx9DCr3q3cPxQW5JF3KpsFLzu+
      u+z2yNF06zMAgPj1q4h5/UU8qwgAgMDQcOLXrybz2BH63xHJDS0DyTqRzqfLl3Dm9Cnue/S/
      COt48c0Ea96LJuOw45xAxpFDAKx7P4Y93ybZt/s08mXSC6/ZvzstAC4M01Tk4+NDWFgYbdu2
      pUOHDkRGRl7WWLyvry+xsbFER0ezbt06LD+Pm13QunVrRo0aRWRkpMP2F198kcaNG/Ovf/2L
      sgq3YF27dmX8+PFMnTq12raLiHHkncpm44f/rHb/L/dFdOthD4DPP3ofgKH3Plhl2UWfxvO3
      aU+Q/MV6Du69uIzd09ubyTPmEPmQ4/zA1vhN7Po6vsq6UndtI3XXxbceNG/RyiEATDabzVbt
      r/gNsNlsZGVlYTab8fDwIDAwkEaNqp5hv8BisZCamkpeXh6hoaGEh4dfo9bKr82mI5VfzStS
      nbQD+3j8rn74B7Zm6X++q3bJJ0BB3mkO7NmBOfM4weERhHXsWu3qoMv1m7+UNZlMBAQEEBBQ
      +/d2+Pj4VHq5nIjIlfr8w/Kr/6ffXFRj5w/QqIkfN9865Kq257pcBSQi8ltTfM5K3LqPuGP0
      Q/QYcLuzmwMY4A5AROR6YCuz8dhLb9D/jshLH3yN/ObnAESuJs0ByK+ZhoBERAxKASAiYlAK
      ABERg1IAiIgYlAJARMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJQC
      QETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBExKBMNpvN5uxG
      iPxadX7gdWc3QeSy6Q5ARMSgFAAiIgalABARMSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiI
      GJQCQETEoBQAIiIGpQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBExKAUACIi
      BqUAEBExKAWAiIhBKQBERAxKASAiYlAKABERg1IAiIgYlJuzGyDXRnp6OqdPn8bNzY3OnTs7
      uzkich1wegCYzWZ27NhBRkYGubm5+Pv7ExgYyM0330yzZs2c3bxaiYuLY+3atQAMGzaMESNG
      OLlFlS1btowNGzbg6+vL5s2bnd0ckd+Mht6edAprSec2AbQPacFZazHHfjrFf75JxXy6oM71
      RQT707tTCIH+TfD3a8TpAgsnzHkk7v6Rw8dzqizTvElDbmoXWGO9Z85a2ZZyzGGb0wKguLiY
      mJgYPvzwQ4qLiyvtd3V1pX///vzlL3+hTZs2Tmhh7WVmZvLtt98C0KVLFye3RkSuBVdXF8YP
      78PkP96Kl6d7pf1T7r+dBR99xb82bq11nbf1aMfi5+6vct/UB4ew6btUXlq8DmtxicO+QTdH
      MCPqrhrrzskr5LbH5ztsc1oAzJkzh08//dT+3cXFBR8fHwoLCwEoLS0lMTGRgQMHXvcB4Orq
      irt7+T8AHx8fJ7dGRK42Hy8PPpg1nohgf3LyCln11W52pKaz78hPRAT7M7BHO+7q35nnHhrK
      sZOnSdh5qFb1Du/fme/2HWX15t2kZeaQmXOGRj5e9OoUwqN/6M8dfTtSZrPx7II1DuXatCof
      LYlelUhm9pkq6z5XfL7Sb3BKAOzZs8fe+YeEhPDYY4/Rp08fGjduTH5+PikpKcTGxpKcnOyM
      5tXZ2LFjGTt2rLObISLXSAMvDyKC/dm8/SCv/P1/ySsosu87kZ3HVzsO8sXW/fz9xTHcP6RH
      rQNgY/I+4nc4HptXUERG1mkSd/3IqrejGNa3E7P+sZH8s1b7MW1aNQfgg/9s40xhEbXRwFkB
      sGvXLvvnN954gw4dOti/+/r60rdvX/r27cuRI0ec0bzris1mIz09nVOnThEREUHDhg1rVa6s
      rIzTp0/j5+eHi4sWe4nUJ+v5EmYs3cCqzbuqPWbL94fJzbfQsU1Arev9ZedfUU5eIV9/f5g/
      3HYj7UNaOIznt2nVlNx8S607fyj/DU4JALPZbP/s6+tb7XFhYWEO31NSUpg+fToAzz//PH36
      9HHYv3v3bmbNmgXA9OnT6dGjh/18jz/+OACPPPIII0aMIDMzk3nz5rFz5068vLxYv34948aN
      o6ioiJCQEObNm1dlm5555hmOHj1KixYtWLJkSaV2vfzyy/Ts2RObzXbZ9QGUlJSwcOFCPvvs
      M/uwmMlkom3btsycOZOIiIgq69u2bRsxMTEcPHiQoqIi3N3dadeuHWfPnq3mrywidVVw1lpj
      5w/g7uaKl4cbmTn1999em1bNsdng8PFs+zYPd1da3dCEnfsz6lRXwVmrcwIgNDTU/vmdd97h
      9ddfx9vb+5LlrFYr6enpAOTn59e432q9eHtUWlpq315QUMDJkycZP348ubm5QPkYvslkIiQk
      hE2bNpGeno7ZbMbf39+h/uzsbJKSkrDZbNx000327YWFhZXadSX1FRUVMXnyZPbu3Wvf5uLi
      QllZGYcOHWLixInMnTuXXr16OdQXExPDsmXLsNls9m3nz58nJSWlxr+riNS/x0YNwMfLo84d
      c3XG3tGLbm0D2X0wg9x8i317cIumuJhMpGVWvUKoJk4ZG+jXrx9eXl4AJCQkMHLkSJYuXWrv
      RK8mq9XKM888Y+/8vby8CAoKAmDIkCH24xITEyuVTUxMtHeuFY+tzuXWFxsba+/8hw8fzuef
      f86WLVuYPXs2Xl5eFBUVMX++42z+nj177J2/yWTinnvuYdasWURHR/PUU0/RokWLS7ZXRK6c
      yQR/vvdWnvjjLRSctRKzJumK6rspIoi3/zySlyfcQXpWLlN/MQEc+vMEsKeHOz07BNOzQzDd
      2gbS1LfBJet2yh1AYGAgzz33HG+++SYlJSXk5uaydOlSli5dSteuXbn77rsZPnw4np6e9X7u
      d999l+LiYho2bMiUKVMYMWKEfQVPv3798Pb2pqioiISEBO69916HsvHx8UD5sFXv3r0vea7L
      qc9isbBixQoAwsPDmTlzpv34wYMHk56eTnR0NAcOHGDr1q32cnPnzrWHyV//+lcGDhxoL9en
      Tx8OHz7Mhg0bavlXEpHL0bxJQ976cyT9uoaRV1DEpDc/ICu3bs8CjBvWi54dg2nR1JdWNzTm
      hiYNsZ47zydxO4n+JJHsvEKH40MCmgIQeUtXIm/p6rAvN99C3Lb9LF37NZk5lVcHOW0ZaGRk
      JB06dGD+/Pls27bN3nnt3buXvXv3smLFCl599VW6d+9er+ctLi6mefPmLFq0iHbt2jns8/Ly
      YsCAAXzxxRds374di8ViX9Z59uxZtm/fDsDAgQNxc7v0n+5y6jty5AgFBeX/YG699dZKdf7u
      d78jOjoaKP9b9e7dm3PnzrFv3z57mYqdv4hcG4N7tWfmo8Pxa+TDD4czeWb+Gk5k59W5nn43
      hnNb97YO246dzGXfkZOcO19S6fj1W36grKzM/t3V1YXmTRrSsnljBnQLY/TgHtw9oCvjZrxP
      6tGTDmWd+iRwREQEixcvdti2a9cu5s2bR0pKCpMmTeK2227jnXfeqbdzPvXUUzz88MPV7p8x
      YwZJSUlYrVbeeustXnvtNQDefPNNzp8/j6+vLy+99FKtz1fX+i6EAsDy5ctZvnx5tXV///33
      APZ5BIDRo0fXum0icmW8Pd1Z+Oxo+nUNIzffwtPzVld62rauJs/+sMrt40f0Zcu7U7FYixn5
      bIz9ziIrN5/l67+ttj4Xk4n3XhnHqrejGDfjfXYduDgn4fRXQfxS9+7dWbJkCaNHj8ZsNpOa
      mlqv9V8Y7qmOl5cX/fv3Jy4ujq+//prS0lJsNhtff/01UPur/8utr+LrLyIiImp8HcaFlUAV
      h8qKimq/DExELp/JBG9OLh/uycotYOLr/yYt89RVO98/13+LbwMvHhs1gNt6tOPjL3fWqlyZ
      zcZXOw7Sq1MIHUMDnB8AFyYqq9OgQQPCw8Mxm82cOVP1U21X05AhQ4iLiyM/P5+dO3dSVlZm
      X4pZm8nfK6nvwoQ0wKBBg4iKirpk/S1btrR/Pnr0aJ3bJyJ1N3pwD4b26ciJ7Dweee0DjptP
      X/VzJu76kcdGDaBXp5BaB0BF1l88DeyUVUDTpk1j7ty5ZGdnV7k/MzOTH374AYBOnTpVeczx
      48crbbNYLFUcWXcDBgywX1UnJiaSkJAA1H7y90rqCw0Ntd8RrFmzhpKSymN+UH6ln5aWBkCr
      Vq3sD3t98sknnDt3rtLxFccIReTKuJhMTBjRF4DnFn16TTp/AH+/RgCcPHVxGXyX8FY1ljGZ
      4Pae5aMF+478ZN/uYjI55w7AarWycuVKVq1axdChQ+nYsSMhISHk5eXx3XffsWXLFvtE6O23
      324vV3E4ZNWqVQQGBtKyZUsOHjxIUlJSvb06wtvbm/79+7N582YSEhLsnXBdh38upz4/Pz/u
      u+8+Vq5cidlsZsKECUyZMoX27dtjMplIS0sjOTmZjz/+mMjISKZMmYKPjw933nknGzZsIDs7
      m0mTJvH0008TEhLCkSNHWL16NXFxcVf+hxERADqHtyQ4oClHf8pl98HKF6M18fZ0Z/Tg7liL
      Sxyu4ru2bcWrE+/igenvUVpa+YItyL8JL/zp9wB8s7f84s9kgo/eeIT4HYeYs+ILjp3MdSjj
      6urCU/cNpFenEH48ns2PFR4g6xze0jkB4OHhAZSvyFm/fj3r16+v8rhBgwYxZswY+/egoCBa
      tGhBVlYWWVlZdZqMrashQ4awefNmMjMzHbZdi/qioqJISkoiIyOD1NRU+1PMNZk4cSKbN2+m
      qKjIPoEuIldHa38/AJr5+vA/0+6r8dhzxSU8t2gtpWXlCzXu6teZ5x8eWikAPNzc6NQmgP9b
      8Ge2phzjuDmPrFP5NGrgRac2AQzt0xF3N1diN20nec/F1+TsO/ITA3u245abwtl/LIuUtJ84
      fDyHG/wacXvPdoQFNsdaXMKzC9Y4BEtrfz/nBMDs2bOJi4tj1apV7Nmzp9LwRGBgIBMnTmT4
      8OEOcwWurq689tprvPjii5w6dXGypUGDBowaNYouXbrwwgsvADhcWVf3uSYDBgzAw8PD/qrq
      yx3+uZz6fH19iY2NJTo6mnXr1lUa2mrdujWjRo0iMjLSvi04OJjly5czbdo0MjIuTvJ4e3vz
      0EMPcfz4cTZu3HhZdzAi4si/aflQTKMGXvbhlZq8uHgdpWWlANw7uHxp+9r43Q7H7Nifzpjp
      y3nvlXGMvLVbpTpOZOcRs2YL6xK+t2+z2eD+l5fx+94diRrZj/YhLegc1tKh3Fc7DjJnxZek
      /+LuwL9pI0y2iu8NcIKSkhJOnjxJdnY2Hh4eBAUF0bhx4xrLWCwW9u/fT05ODs2bN6dLly72
      u4r6dODAAXvn26hRI9q2bXuJEvVfn81mIysrC7PZjIeHB4GBgTRq1KjG4zMyMjh06BANGjSg
      W7duekX1VdT5gded3QT5FYkI9mftnEfJzDnDyGf/jsVa+f+F4u7mSkAzX1o2b0zjhl7kFRSR
      fjIX8+kCLtVbu7m6ENqyGcEBfuTknSUtM4cCS+U5wQucHgAiv2YKAKmLl8bfwYPDejHpjZUk
      73X+2471nmARkWvA092Nu2/pypqvdl8XnT9chw+CiYj8FplcTMxZ8QVfbt3v7KbYKQBERK4B
      67nzrI3//tIHXkMaAhIRMSgFgIiIQSkAREQMSgEgImJQCgAREYNSAIiIGJQCQETEoBQAIiIG
      pQAQETEoBYCIiEEpAEREDEoBICJiUAoAERGDUgCIiBiUAkBExKD+H5W3HhY1VN6zAAAAAElF
      TkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Ratings/0.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAAAsTAAALEwEAmpwY
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAglpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1TS27bMBC9CsFsWqAWPzIl
        S4ga6Itm4SRwDKRbWWJiwpYokHSt+Gpd9Ei9QinXcovCNbnhDN+bN0PO3N71XVltuAEr/iba
        CP78/gMCUUfwhc3xvEv5Wnw5KP58eFhWh00V1PDuM7jtw77pGm5K0DfbVod9BMtarnhoz4Mb
        QXCEmE0E4+ECfJ0/gVQqDpjjTSrs+cAPHMJ8f+p/AhQThrCLXDyhbjjF4ZSC04JWTdWv4SIr
        TlrWiuDamC5EaL/fO3vXkeoNkSAIEKaI0olFTPR7a8p+0uqbMULGdaVEZ4RswWCXK7kzEYRj
        CU03n58Dt9o5FuRUskF92SHiYNQ0aERrs+Cv19F6+d5xtOBa7lTFLfzmL6nr1AFoswkflbCf
        Um4zWe0a3pr7LIL2xqlFHU5jLyMZ82K7s4yQWZJ4KSUFY3nuMhyPMS5xWezPEs8v8rxghOQs
        mblJHrCE5llcxDgbufetNmVb8ZEr/nDzq9wwVbw0Ui2l3I4d8LSWRuq17ED67IEPL6Kt5V5/
        HL7nlClX4huvCyUbcHzfUFzSL2IvmRKWMeZafTeJi1lKYxrnmAa5h+GJW1+q+zfX+y8X2WTQ
        P80yumwHDsdz61vjPDy8tROj7Gj8Ai0LBz3D7AU2AAACk0lEQVRYhd2YsWobQRCGvwvB+AWC
        IZUwLqJGChcwBEJwoRcwCJeBVDa49APonkCtyuCoMMaoCrgOIRAwRGBjUIxdqHFCEGqFrEKb
        Qv/ivSWRTrJOPmVgGW7ndv5Pe7OrvQuMMWTZnjw2wCTLPODTWQcGQVAEXgMhkAdywDOFO0Ab
        aAFN4Btw/rc8E0vMGJO4AQFQBupAFzAJW1djysqRWD9IukiCINgC3gPv1PUT+AKcARfADfBb
        sTVgAygAm8Bb4LliH4EPwOe5zSCwD1xpNi6BClCYYgcoaMylclwp52TtCWArQAQMgCFQA0Ln
        cZcU/wRcAz21a/VFusc+1lA5hsoZASsPAYz0i38BB07/DtAgeQ02NMbagXIaIJoJUI9goES7
        6lsHqkB/Cjjb+hq7Lshd5R4A+1MBAluqk6GdOeAlcDIDmN9OlMvO5FBaW4kAVS+HSlZzZm4e
        cC6kncma+g5htKtMAixzv1rtgqjOEc62qgBD7ld3OQlgXTdXnAUxS80lqckdaVTUVx8LCBQZ
        7fq3jPaugOlW67StIY2CNLtAcRzgngYe6bqUIpxtJWkd6XrPZfJPM6H8mfwb0jerYTVDN+gD
        5uUv5F+lBOWa1bCaeTfoA+bkb+RfpMMUM6thNXOxqFeDdrWu6rpH+jXYk9aqrvvjajBz5gN2
        5NfkbxfAYDWsZscN+oBt+Q35H+kwxcxqWM22G/QBW/IF+e/pMMXMaljNlhv0AZvym/JfU4Jy
        zWpYzWYsmvW/utgMGmPOgVNGLzjbZkR9DNw9YIb+ZXfAsTS2pXkqhhjU0h23sn1gzfyRfyle
        mhzISMmz99opkGy/uHuP+1E+ffwfH4+8LSibn998W9QHzJkBF2VLd6LOnP0BpfEWCrijfekA
        AAAASUVORK5CYII=
      </shape>
      <shape name='Ratings/1.png'>
        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
      </shape>
      <shape name='Ratings/2.png'>
        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
        6szZb2yPuQYIjLLqAAAAAElFTkSuQmCC
      </shape>
      <shape name='Ratings/3.png'>
        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
        eMBfUiY/3MsqrycAAAAASUVORK5CYII=
      </shape>
      <shape name='Ratings/3bw.png'>
        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
        AAAASUVORK5CYII=
      </shape>
      <shape name='Ratings/4.png'>
        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
      </shape>
      <shape name='Ratings/4bw.png'>
        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
        QQAAAABJRU5ErkJggg==
      </shape>
    </shapes>
  </external>
</workbook>
